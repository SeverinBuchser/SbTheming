{"version":3,"sourceRoot":"","sources":["file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_typography-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/functions/helper/_exists.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/functions/_typography.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/functions/_background.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_border.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_spacings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_typography.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_padding.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_transition.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/_background.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_background.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/_typography.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/global/_global-font.scss"],"names":[],"mappings":"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","file":"dist/sb-theme.css","sourcesContent":["/*\n  Imports the following font faces from goolge fonts (https://fonts.google.com/):\n\n  - Inter (https://fonts.google.com/specimen/Inter)\n    - Thin 100\n    - Extra-light 200\n    - Light 300\n    - Regular 400\n    - Medium 500\n    - Semi-bold 600\n    - Bold 700\n    - Extra-bold 800\n    - Black 900\n\n  - Abril Fatface (https://fonts.google.com/specimen/Abril+Fatface)\n    - Regular 400\n*/\n@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\n\n/*\n  Font-weights\n*/\n$font-weight-regular: 400;\n$font-weight-bold: 600;\n\n$font-weights: (\n  'regular': $font-weight-regular,\n  'bold': $font-weight-bold\n);\n\n$font-weight-names: map-keys($font-weights);\n\n/*\n  Fontfaces\n*/\n$fontface-default: 'Inter', sans-serif;\n$fontface-display: 'Abril Fatface', cursive;\n\n$fontfaces: (\n  'default': $fontface-default,\n  'display': $fontface-display\n);\n\n$fontface-names: map-keys($fontfaces);\n\n// font sizes\n$font-size-s: 0.75rem;\n$font-size-d: 1rem;\n$font-size-m: 1.25rem;\n$font-size-l: 1.5rem;\n$font-size-xl: 1.75rem;\n\n$font-sizes: (\n  \"s\": $font-size-s,\n  \"d\": $font-size-d,\n  \"m\": $font-size-m,\n  \"l\": $font-size-l,\n  \"xl\": $font-size-xl,\n);\n\n$font-size-names: map-keys($font-sizes);\n","/*\n  Checks if the name exists in names. Returns true if it exists and false otherwise.\n*/\n@function exists($names, $name) {\n  $exists: false;\n  @each $test in $names {\n    @if $test == $name {\n      $exists: true;\n    }\n  }\n  @return $exists;\n}\n","/*\n  Returns the font-weight, specified by the parameter.\n*/\n@function getFontWeight($font-weight) {\n  @if not exists($font-weight-names, $font-weight) {\n    @error \"Font-weight with name '#{$font-weight}' does not exist!\";\n  }\n  @return map-get($font-weights, $font-weight);\n}\n\n\n/*\n  Returns the fontface, specified by the parameter.\n*/\n@function getFontface($fontface) {\n  @if not exists($fontface-names, $fontface) {\n    @error \"Fontface with name '#{$fontface}' does not exist!\";\n  }\n  @return map-get($fontfaces, $fontface);\n}\n\n\n/*\n  Returns the font-size, specified by the parameter.\n*/\n@function getFontSize($font-size) {\n  @if not exists($font-size-names, $font-size) {\n    @error \"Font-size with name '#{$font-size}' does not exist!\";\n  }\n  @return map-get($font-sizes, $font-size);\n}\n","/*\n  Returns the background color, specified by the parameter.\n*/\n@function getBackgroundColor($background-color) {\n  @if not exists($background-color-names, $background-color) {\n    @error \"Background-color with name '#{$background-color}' does not exist!\";\n  }\n  @return map-get($background-colors, $background-color);\n}\n","/*****************************************************************************\n                            Border - Settings\n******************************************************************************/\n\n// colors\n$border-color-dark: $dark;\n$border-color-bright: $bright;\n\n// widths\n$border-width-s: 1px;\n$border-width-d: 2px;\n$border-width-m: 3px;\n$border-width-l: 4px;\n\n// radii\n$border-radius-s: $spacing-s;\n$border-radius-d: $spacing-d;\n$border-radius-m: $spacing-m;\n$border-radius-l: $spacing-l;\n","/*****************************************************************************\n                            Border - Naming\n******************************************************************************/\n\n// colors\n$border-colors: (\n  'dark': $border-color-dark,\n  'bright': $border-color-bright\n);\n\n// widths\n$border-widths: (\n  's': $border-width-s,\n  'd': $border-width-d,\n  'm': $border-width-m,\n  'l': $border-width-l\n);\n\n// radii\n$border-radii: (\n  's': $border-radius-s,\n  'd': $border-radius-d,\n  'm': $border-radius-m,\n  'l': $border-radius-l\n);\n","/*****************************************************************************\n                            Border - Functions\n******************************************************************************/\n\n/*\n  Returns the border-color, specified by the parameter.\n*/\n@function getBorderColor($border-color) {\n  @if not exists(map-keys($border-colors), $border-color) {\n    @error \"Border-color with name '#{$border-color}' does not exist!\";\n  }\n  @return map-get($border-colors, $border-color);\n}\n\n/*\n  Returns the border-width, specified by the parameter.\n*/\n@function getBorderWidth($border-width) {\n  @if not exists(map-keys($border-widths), $border-width) {\n    @error \"Border-wdith with name '#{$border-width}' does not exist!\";\n  }\n  @return map-get($border-widths, $border-width);\n}\n\n\n/*\n  Returns the border-radius, specified by the parameter.\n*/\n@function getBorderRadius($border-radius) {\n  @if not exists(map-keys($border-radii), $border-radius) {\n    @error \"Border-radius with name '#{$border-radius}' does not exist!\";\n  }\n  @return map-get($border-radii, $border-radius);\n}\n","/*****************************************************************************\n                            Border - Classes\n******************************************************************************/\n\n/*\n  Creates a border class for each border color, width and radius.\n\n\n  Attributes:\n  - color: 'dark', 'bright'\n  - width: 's', 'd', 'm', 'l'\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-[color]-[width]-[radius]'\n*/\n@debug \"Create border-classes\";\n@each $border-color in map-keys($border-colors) {\n  @each $border-width in map-keys($border-widths) {\n    @each $border-radius in map-keys($border-radii) {\n      .sb-border-#{$border-color}-#{$border-width}-#{$border-radius} {\n        @include border-color($border-color);\n        @include border-width($border-width);\n        @include border-radius($border-radius);\n        border-style: solid;\n      }\n    }\n  }\n}\n\n/*\n  Creates a border radius class for each border radius.\n\n\n  Attributes:\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-radius-[radius]'\n*/\n@debug \"Create border-radius-classes\";\n@each $border-radius in map-keys($border-radii) {\n  .sb-border-radius-#{$border-radius} {\n    @include border-radius($border-radius);\n  }\n}\n","@mixin border-radius($border-radius) {\n  border-radius: getBorderRadius($border-radius);\n}\n\n@mixin border-color($border-color) {\n  border-radius: getBorderColor($border-color);\n}\n\n@mixin border-width($border-width) {\n  border-radius: getBorderWidth($border-width);\n}\n","/*****************************************************************************\n                            Button - Settings\n******************************************************************************/\n\n// colors\n$btn-warn-background: $warn;\n$btn-warn-text: $dark;\n$btn-warn-hover-background: lighten($dark, 3%);\n$btn-warn-hover-text: $warn;\n\n$btn-success-background: $success;\n$btn-success-text: $dark;\n$btn-success-hover-background: lighten($dark, 3%);\n$btn-success-hover-text: $success;\n\n$btn-info-background: $info;\n$btn-info-text: $dark;\n$btn-info-hover-background: lighten($dark, 3%);\n$btn-info-hover-text: $info;\n\n$btn-primary-background: $primary;\n$btn-primary-text: $dark;\n$btn-primary-hover-background: lighten($dark, 3%);\n$btn-primary-hover-text: $primary;\n\n$btn-secondary-background: $secondary;\n$btn-secondary-text: $dark;\n$btn-secondary-hover-background: lighten($dark, 3%);\n$btn-secondary-hover-text: $secondary;\n\n// paddings\n$button-padding-s: $spacing-s;\n$button-padding-d: $spacing-d;\n$button-padding-m: $spacing-m;\n$button-padding-l: $spacing-l;\n\n// font-sizes\n$button-font-size-delta: 0.2rem;\n$button-font-size-s: $spacing-s + $button-font-size-delta;\n$button-font-size-d: $spacing-d + $button-font-size-delta;\n$button-font-size-m: $spacing-m + $button-font-size-delta;\n$button-font-size-l: $spacing-l + $button-font-size-delta;\n\n// border-radius\n$button-border-radius: $border-radius-s;\n","/*****************************************************************************\n                            Button - Naming\n******************************************************************************/\n\n// colors\n$button-colors: (\n  'warn': (\n    'background': $btn-warn-background,\n    'text': $btn-warn-text,\n    'hover-background': $btn-warn-hover-background,\n    'hover-text': $btn-warn-hover-text\n  ),\n  'success': (\n    'background': $btn-success-background,\n    'text': $btn-success-text,\n    'hover-background': $btn-success-hover-background,\n    'hover-text': $btn-success-hover-text\n  ),\n  'info': (\n    'background': $btn-info-background,\n    'text': $btn-info-text,\n    'hover-background': $btn-info-hover-background,\n    'hover-text': $btn-info-hover-text\n  ),\n  'primary': (\n    'background': $btn-primary-background,\n    'text': $btn-primary-text,\n    'hover-background': $btn-primary-hover-background,\n    'hover-text': $btn-primary-hover-text\n  ),\n  'secondary': (\n    'background': $btn-secondary-background,\n    'text': $btn-secondary-text,\n    'hover-background': $btn-secondary-hover-background,\n    'hover-text': $btn-secondary-hover-text\n  )\n);\n\n\n// sizes (padding and font-size)\n$button-default-padding: $button-padding-d; // default padding\n$button-default-font-size: $button-font-size-d; // default font-size\n$button-sizes: (\n  's': (\n    'padding': $button-padding-s,\n    'font-size': $button-font-size-s\n  ),\n  'm': (\n    'padding': $button-padding-m,\n    'font-size': $button-font-size-m\n  ),\n  'l': (\n    'padding': $button-padding-l,\n    'font-size': $button-font-size-l\n  ),\n);\n","/*****************************************************************************\n                            Button - Functions\n******************************************************************************/\n\n/*\n  Returns a map with background-color and text-color of a button color:\n  (\n    'background': {color},\n    'text': {color}\n  )\n*/\n@function getButtonColors($button-color) {\n  @if not exists(map-keys($button-colors), $button-color) {\n    @error \"Button color with name '#{$button-color}' does not exist!\";\n  }\n  @return map-get($button-colors, $button-color);\n}\n\n/*\n  Returns the background-color of the button-colors.\n*/\n@function getButtonBackgroundColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'background');\n}\n\n/*\n  Returns the text-color of the button-colors.\n*/\n@function getButtonTextColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'text');\n}\n\n/*\n  Returns the hover-background-color of the button-colors.\n*/\n@function getButtonHoverBackgroundColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'hover-background');\n}\n\n/*\n  Returns the hover-text-color of the button-colors.\n*/\n@function getButtonHoverTextColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'hover-text');\n}\n","/*****************************************************************************\n                            Button - Classes\n******************************************************************************/\n\n/*\n  Adds color and hover to a button. Also creates the inverse of the colors.\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.btn--[color]' for ROOT '.sb-btn'\n*/\n@mixin button-color-class($button-color) {\n  &.btn--#{$button-color} {\n    background: getButtonBackgroundColor($button-color);\n    color: getButtonTextColor($button-color);\n    @include ease(300ms);\n    &:hover {\n      background: getButtonHoverBackgroundColor($button-color);\n      color: getButtonHoverTextColor($button-color);\n    }\n    @include button-empty-color-class($button-color);\n  }\n}\n\n/*\n  Adds inverse colors as in the normal class.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-plain' for OPTION '.btn--[color]'\n*/\n@mixin button-empty-color-class($button-color) {\n  &.is-plain {\n    background: getButtonHoverBackgroundColor($button-color);\n    color: getButtonHoverTextColor($button-color);\n    @include ease(300ms);\n    &:hover {\n      background: getButtonBackgroundColor($button-color);\n      color: getButtonTextColor($button-color);\n    }\n  }\n}\n\n/*\n  Adds different sizes to the button.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.btn--[size] for ROOT '.sb-btn'\n*/\n@mixin button-size-class($button-size) {\n  &.btn--#{$button-size} {\n    $size: map-get($button-sizes, $button-size);\n    @include paddingX(map-get($size, 'padding'));\n    @include paddingY(map-get($size, 'padding')/2);\n    font-size: map-get($size, 'font-size');\n  }\n}\n\n/*\n  Defines the root button class with all its sizes and colors.\n\n  ROOT: .sb-btn\n*/\n@debug \"Create button-classes\";\n.sb-btn {\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  border-radius: $button-border-radius;\n  @include font-weight('regular');\n  @include fontface('default');\n\n  @include paddingX($button-default-padding);\n  @include paddingY($button-default-padding/2);\n\n  @each $button-size in map-keys($button-sizes) {\n    @include button-size-class($button-size);\n  }\n\n  @each $button-color in map-keys($button-colors) {\n    @include button-color-class($button-color);\n  }\n}\n","$spacing-s: 0.5rem;\n$spacing-d: 0.75rem;\n$spacing-m: 1rem;\n$spacing-l: 1.25rem;\n","@mixin font-weight($font-weight) {\n  font-weight: getFontWeight($font-weight);\n}\n\n@mixin fontface($fontface) {\n  font-family: getFontface($fontface);\n}\n\n@mixin font-size($font-size) {\n  font-size: getFontSize($font-size);\n}\n","@mixin paddingX($padding) {\n  padding-left: $padding;\n  padding-right: $padding;\n}\n\n@mixin paddingY($padding) {\n  padding-top: $padding;\n  padding-bottom: $padding;\n}\n","@mixin easeInOut($time) {\n  transition: all $time ease-in-out;\n}\n\n@mixin easeIn($time) {\n  transition: all $time ease-in;\n}\n\n@mixin easeOut($time) {\n  transition: all $time ease-in;\n}\n\n@mixin ease($time) {\n  transition: all $time ease;\n}\n\n@mixin linear($time) {\n  transition: all $time linear;\n}\n","/*\n  Adds background-persistent-color-class.\n*/\n@mixin background-color-class($background-color) {\n  .sb-bg-#{$background-color} {\n    @include background-color($background-color)\n  }\n}\n\n/*\n  Includes all background-colors and creates a background-color-class for each\n  of these colors.\n*/\n@debug \"Create background-color-classes\";\n@each $background-color in $background-color-names {\n  @include background-color-class($background-color);\n}\n","@mixin background-color($background-color) {\n  background-color: getBackgroundColor($background-color);\n}\n","@debug \"Create font-weight-classes\";\n@each $font-weight in $font-weight-names {\n  .sb-font-weight-#{$font-weight} {\n    font-weight: getFontWeight($font-weight);\n  }\n}\n\n@debug \"Create fontface-classes\";\n@each $fontface in $fontface-names {\n  .sb-fontface-#{$fontface} {\n    font-weight: getFontface($fontface);\n  }\n}\n\n@debug \"Create font-size-classes\";\n@each $font-size in $font-size-names {\n  .sb-font-size-#{$font-size} {\n    @include font-size($font-size);\n  }\n}\n","body, html {\n  @include font-weight('regular');\n  @include fontface('default');\n  @include font-size('d');\n}\n"]}