{"version":3,"sourceRoot":"","sources":["file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_color-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_color-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/functions/_exists.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/background/_background-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/_form-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/_form-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/_form-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_spacings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/button/_button-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/button/_button-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_padding.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_transition.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/toggle-switch/_toggle-switch-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/checkbox/_checkbox-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/radio-button/_radio-button-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/select-button/_select-button-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/slider/_slider-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/form/form-group/_form-group-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/global/_global-font.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;ACzVA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAUA;AAAA;AAAA;AAWA;AAAA;AAAA;ACzBA;AAAA;AAAA;AAIA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;ACiBQ;ACZA;AFSF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAJF;EACE;EACA;EACA;EACA;;;AAMR;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAUE;EACE;;;AADF;EACE;;;AADF;EACE;;;AADF;EACE;;;ACvCJ;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AEJA;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAWA;AAAA;AAAA;AAWA;AAAA;AAAA;AC1BA;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AASE;EACE;;;AADF;EACE;;;AAIJ;AAAA;;AAAA;AAAA;;AAAA;AAAA;AASE;EACE;;;AADF;EACE;;;AAIJ;AAAA;;AAAA;AAAA;;AAAA;AAAA;AASE;EACE;;;AADF;EACE;;;AADF;EACE;;;AADF;EACE;;;AADF;EACE;;;AC1CJ;AAAA;AAAA;AAIA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAUE;EACE;;;AADF;EACE;;;AADF;EACE;;;AADF;EACE;;;AADF;EACE;;;AJfJ;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;AKJA;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAcA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAeA;AAAA;;AAAA;AAAA;AAMA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEA;EACA;AACA;EACA;AAEA;EACA;AAEA;EACA;;AAhCA;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AAfF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;;ACdJ;AAAA;AAAA;AAIA;AAAA;AAAA;ACJA;AAAA;AAAA;ACAA;AAAA;AAAA;AAeA;AAAA;;AAAA;AAAA;AAMA;EACE,eCtBU;EDuBV,SCvBU;;ADyBV;EACE;EACA;EACA;;AAEA;EACE;;AAGF;EACE;;AAGF;EACE;;AAIJ;EACE;EACA,UC5CQ;;AD8CR;EACE;;AAGF;EACE;;AAIJ;EACE;EACA,aC1DQ;ED2DR,YC1DQ;ED2DR;EACA;EACA;;AAEA;EACE;;AAGF;EACE;;AAGF;EACE;;AAnEF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;AAJF;EACE;;AAEF;EACE;;;AEVN;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAuBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAoBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAcA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAmBA;AAAA;;AAAA;AAAA;AAMA;EACE;EACA;EACA;EACA;EACA;EAEA,ejBxGgB;EiB0GhB;EACA;EACA;;AAGA;EACE;;AAhEF;EACE;EACA,QAHO;EC7DT,cDiEoB;EChEpB,eDgEoB;;AAgBpB;EACE;;AAaF;EAEE,QADS;EAET,OAFS;EAGT;EACA;EACA;;AAvCF;EACE;EACA,QAHO;EC7DT,cDiEoB;EChEpB,eDgEoB;;AAgBpB;EACE;;AAaF;EAEE,QADS;EAET,OAFS;EAGT;EACA;EACA;;AAvCF;EACE;EACA,QAHO;EC7DT,cDiEoB;EChEpB,eDgEoB;;AAgBpB;EACE;;AAaF;EAEE,QADS;EAET,OAFS;EAGT;EACA;EACA;;AAvCF;EACE;EACA,QAHO;EC7DT,cDiEoB;EChEpB,eDgEoB;;AAgBpB;EACE;;AAaF;EAEE,QADS;EAET,OAFS;EAGT;EACA;EACA;;AAxFF;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAlCJ;EACE;EACA;EEHF;;AFKE;EACE;EACA;;AAEF;EACE;EACA;;AAeJ;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;;AGhDN;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AA4CA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAUA;EACE;EACA;EACA;ED7EA;;AC+EA;EACE;EDhFF;;ACoFA;EACE;;AAlFF;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAXN;EACE;;AAEE;EACE;;AAIJ;EACE;;AACA;EACE;;AAwBN;EACE,OANM;EAON,QARO;EASP;;AAEA;EACE;EACA;EACA,OAZO;EAaP,QAbO;EAcP;;AAIA;EACE;;AAIF;EACE;;AApBN;EACE,OANM;EAON,QARO;EASP;;AAEA;EACE;EACA;EACA,OAZO;EAaP,QAbO;EAcP;;AAIA;EACE;;AAIF;EACE;;AApBN;EACE,OANM;EAON,QARO;EASP;;AAEA;EACE;EACA;EACA,OAZO;EAaP,QAbO;EAcP;;AAIA;EACE;;AAIF;EACE;;AApBN;EACE,OANM;EAON,QARO;EASP;;AAEA;EACE;EACA;EACA,OAZO;EAaP,QAbO;EAcP;;AAIA;EACE;;AAIF;EACE;;;ACvER;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2BA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AA2BA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAUA;EACE;EACA;EACA,UNvEU;;AMyEV;EACE;;AAIA;EACE;;AACA;EACE;EACA;EACA;EACA;;AAKF;EACE;EACA;;AAEF;EACE;EACA;;AAKF;EACE;EACA;;AAEF;EACE;EACA;;AAIJ;EACE;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAIJ;EACE;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAKN;EACE;EACA;EACA;EF7HF;;AEgIE;EACE;EACA;;AACA;EACE;EACA;EACA;EACA;EACA;EFxIN;;AEiJI;EACE;;AAKN;EACE;;AAEE;EACE;;AAIF;EACE;;AA5JJ;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAPN;EACE;;AAGA;EACE;;AACA;EACE;;AAoBN;EACE,QAJK;EAKL,OALK;EAML;;AAGE;EACE;;AAPN;EACE,QAJK;EAKL,OALK;EAML;;AAGE;EACE;;AAPN;EACE,QAJK;EAKL,OALK;EAML;;AAGE;EACE;;AAPN;EACE,QAJK;EAKL,OALK;EAML;;AAGE;EACE;;;ACnDV;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAoBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAUA;EACE;EACA;EACA,UP9DU;;AOgEV;EACE;;AAIA;EACE;;AACA;EACE;EACA;EACA;EACA;;AAKF;EACE;EACA;;AAEF;EACE;EACA;;AAKF;EACE;EACA;;AAEF;EACE;EACA;;AAIJ;EACE;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAIJ;EACE;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAKN;EACE;;AAEE;EACE;;AAGA;EACE;;AAMR;EACE;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EH7IJ;;AGIE;EACE;;AAIA;EACE;;AANJ;EACE;;AAIA;EACE;;AANJ;EACE;;AAIA;EACE;;AANJ;EACE;;AAIA;EACE;;AANJ;EACE;;AAIA;EACE;;AAmBJ;EACE,QAJK;EAKL,OALK;;AAGP;EACE,QAJK;EAKL,OALK;;AAGP;EACE,QAJK;EAKL,OALK;;AAGP;EACE,QAJK;EAKL,OALK;;;ACvCX;AAAA;AAAA;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmDA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AA4BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAmBA;AAAA;;AAAA;AAAA;AAMA;EACE;EACA;;AAKA;EJtGA;EIwGE,kBAJ2B;EAK3B;EACA;EACA;;AACA;EJ5GF;;AIkHE;EACE;EACA;EACA;EACA;EACA;EACA,2BvBtHY;EuBuHZ,4BvBvHY;EmBFhB;;AI4HI;EACE;EACA;EJ9HN;;AIgIM;EACE;;AAON;EACE;EACA;EJ1IJ;EI4II;;AAEA;EACE;;AAIF;EACE,kBAjDsB;EAkDtB;;AAhGJ;EACE;;AAKE;EACE;ELxER,cHDU;EGEV,eHFU;EGMV,aKqE0B;ELpE1B,gBKoE0B;;AAmBtB;EACE;EACA;;AA9BJ;EACE;;AAKE;EACE;ELxER,cHDU;EGEV,eHFU;EGMV,aKqE0B;ELpE1B,gBKoE0B;;AAmBtB;EACE;EACA;;AA9BJ;EACE;;AAKE;EACE;ELxER,cHDU;EGEV,eHFU;EGMV,aKqE0B;ELpE1B,gBKoE0B;;AAmBtB;EACE;EACA;;AA9BJ;EACE;;AAKE;EACE;ELxER,cHDU;EGEV,eHFU;EGMV,aKqE0B;ELpE1B,gBKoE0B;;AAmBtB;EACE;EACA;;AAlFN;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;AAjCV;EACE;;AAIE;EACE;;AAGA;EACE;;AAIF;EACE;;AAOJ;EACE;;AACA;EACE;EACA;;AACA;EACE;EACA;;AAEF;EACE;EACA;;;AC/CZ;AAAA;AAAA;AAyCA;EACE;EACA,UT3CU;ES4CV;EACA;;AAEA;EACE;;AAIA;EACE;;AAKF;EACE;;AAIJ;EACE;EACA;;AAGF;EACE;EACA;EACA;EACA;EACA;;AACA;EACE;;AAEF;EACE;EACA;EAGA;EACA;EACA;;AAIF;EACE;;AAEF;EACE;;AAEF;EACE;;AA1FJ;EA6FI;EACA;EACA,eTpGM;ESqGN,Y3B7FI;E2B8FJ;;AA7FJ;EAyFI;EACA;EACA,eTpGM;ESqGN,Y3B7FI;E2B8FJ;;AAzFJ;EAqFI;EACA;EACA,eTpGM;ESqGN,Y3B7FI;E2B8FJ;;AAnFJ;EAuFI,eT1GM;ES2GN;EACA,QT5GM;;ASuBV;EAmFI,eT1GM;ES2GN;EACA,QT5GM;;AS2BV;EA+EI,eT1GM;ES2GN;EACA,QT5GM;;AS+BV;EA2EI,eT1GM;ES2GN;EACA,QT5GM;;ASmCV;EAuEI,eT1GM;ES2GN;EACA,QT5GM;;ASoIV;EACE;EACA;EACA;EACA;;;ACxIJ;AAAA;AAAA;AAIA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgBA;AAAA;;AAAA;AAAA;AAMA;EACE;EACA;EACA,QV7BU;;AUeV;EACE;;AADF;EACE;;;AAoBJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA;AAAA;;AAAA;AAAA;AAMA;EACE,SV1DU;;AU2DV;EACE;EACA,UV7DQ;;AU+DR;EACE;;AACA;EACE;EACA,UVnEI;EUoEJ;;AACA;EACE;;AAMR;EACE;;AAIA;EACE;;AAGA;EACE;;AAMJ;EACE;;AAGA;EACE;;AAMJ;EACE;;AAGA;EACE;;AA9DN;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;AADF;EACE;;;AC/CJ;EACE;EACA;EACA","file":"dist/sb-theme.css","sourcesContent":["/*****************************************************************************\n                        Color - Settings\n******************************************************************************/\n\n$success: #28df99;\n$warn: #ff546d;\n$info: #FFD147;\n\n$primary: #3d8bfd;\n$secondary: #f75c9a;\n\n$dark: #22272C;\n$night: #2d343a;\n$bright: #FFFFFF;\n$light: #F6EDF8;\n\n\n// theme dependent background colors\n$background-color-night-root: $dark;\n$background-color-night-child: $night;\n$background-color-light-root: $bright;\n$background-color-light-child: $light;\n\n// theme dependent text colors for the root and child background\n$text-color-night: $bright;\n$text-color-light: $dark;\n\n// theme independent background colors\n$background-color-warn: $warn;\n$background-color-success: $success;\n$background-color-info: $info;\n$background-color-primary: $primary;\n$background-color-secondary: $secondary;\n\n// theme dependent text colors for theme independent background\n$text-color-night-background-warn: $dark;\n$text-color-night-background-success: $dark;\n$text-color-night-background-info: $dark;\n$text-color-night-background-primary: $bright;\n$text-color-night-background-secondary: $dark;\n$text-color-light-background-warn: $bright;\n$text-color-light-background-success: $bright;\n$text-color-light-background-info: $dark;\n$text-color-light-background-primary: $bright;\n$text-color-light-background-secondary: $bright;\n\n// theme dependent background hover colors for every theme independent background\n$background-hover-color-night-background-warn: transparentize($warn, 0.9);\n$background-hover-color-night-background-success: transparentize($success, 0.9);\n$background-hover-color-night-background-info: transparentize($info, 0.9);\n$background-hover-color-night-background-primary: transparentize($primary, 0.9);\n$background-hover-color-night-background-secondary: transparentize($secondary, 0.9);\n$background-hover-color-light-background-warn: transparentize($warn, 0.9);\n$background-hover-color-light-background-success: transparentize($success, 0.8);\n$background-hover-color-light-background-info: transparentize($info, 0.7);\n$background-hover-color-light-background-primary: transparentize($primary, 0.85);\n$background-hover-color-light-background-secondary: transparentize($secondary, 0.85);\n\n// theme dependent text hover colors for theme dependent background hover color\n$text-hover-color-night-background-warn: $warn;\n$text-hover-color-night-background-success: $success;\n$text-hover-color-night-background-info: $info;\n$text-hover-color-night-background-primary: $primary;\n$text-hover-color-night-background-secondary: $secondary;\n$text-hover-color-light-background-warn: $warn;\n$text-hover-color-light-background-success: $dark;\n$text-hover-color-light-background-info: $dark;\n$text-hover-color-light-background-primary: $primary;\n$text-hover-color-light-background-secondary: $secondary;\n","/*****************************************************************************\n                            Color - Functions\n******************************************************************************/\n\n\n\n/********************* Theme Background Color - Functions ********************/\n\n/*\n  Returns a map for the requested theme if the theme exists. The theme name can\n  either be 'night' or 'light'. If some other value get reuqested, the function\n  will throw an error. The map contains theme dependent root and child\n  background colors:\n  (\n    'root': {background color},\n    'child': {background color}\n  )\n*/\n@function getThemeBackgroundColors($theme) {\n  @if not exists(map-keys($theme-background-colors), $theme) {\n    @error \"Background colors for theme with name '#{$theme}' do not exist!\";\n  }\n  @return map-get($theme-background-colors, $theme);\n}\n\n/*\n  Returns the background color for the requested theme and field if the theme\n  and field exist. The theme name can either be 'night' or 'light'. If some\n  other value gets reuqested, the function will throw an error. The field name\n  can either be 'root' or 'child'. If some other value gets requested, the\n  funtion will thorw an error.\n*/\n@function getThemeBackgroundColor($theme, $rootOrChild) {\n  $theme-colors: getThemeBackgroundColors($theme);\n  @if not exists(map-keys($theme-colors), $rootOrChild) {\n    @error \"Background colors for field with name '#{$rootOrChild}' do not\"\n    + \" exist!\";\n  }\n  @return  map-get($theme-colors, $rootOrChild);\n}\n\n/*\n  Returns the root background color for the requested theme if the theme exists.\n  The theme name can either be 'night' or 'light'. If some other value gets\n  reuqested, the function will throw an error.\n*/\n@function getThemeRootBackgroundColor($theme) {\n  @return getThemeBackgroundColor($theme, 'root');\n}\n\n/*\n  Returns the child background color for the requested theme if the theme\n  exists. The theme name can either be 'night' or 'light'. If some other value\n  gets reuqested, the function will throw an error.\n*/\n@function getThemeChildBackgroundColor($theme) {\n  @return getThemeBackgroundColor($theme, 'child');\n}\n\n\n\n/*********************** Theme Text Color - Functions ************************/\n\n/*\n  Returns the text color for the requested theme if the theme exists. The theme\n  name can either be 'night' or 'light'. If some other value get reuqested, the\n  function will throw an error.\n*/\n@function getThemeTextColor($theme) {\n  @if not exists(map-keys($theme-text-color-root-and-child), $theme) {\n    @error \"Text color for theme with name '#{$theme}' does not exist!\";\n  }\n  @return map-get($theme-text-color-root-and-child, $theme);\n}\n\n\n\n/*********************** Background Color - Functions ************************/\n\n/*\n  Returns the background color for the requested color if the color exists.\n  The color name can either be 'warn', 'success', 'info', 'primary' or\n  'secondary'. If some other value get reuqested, the function will throw an\n  error.\n*/\n@function getBackgroundColor($color) {\n  @if not exists(map-keys($background-colors), $color) {\n    @error \"Background color for color with name '#{$color}' does not exist!\";\n  }\n  @return map-get($background-colors, $color);\n}\n\n\n\n/**************** Theme Text Color for Background - Functions ****************/\n\n/*\n  Returns a map for the requested theme if the theme exists. The theme name can\n  either be 'night' or 'light'. If some other value get reuqested, the function\n  will throw an error. The map contains theme dependent text colors for the\n  theme independent background colors:\n  (\n    'warn': {text color},\n    'success': {text color},\n    'info': {text color},\n    'primary': {text color},\n    'secondary': {text color}\n  )\n*/\n@function getThemeTextColorsForBackground($theme) {\n  @if not exists(map-keys($theme-text-color-background), $theme) {\n    @error \"Text colors for backgrounds for theme with name '#{$theme}' do not\"\n    + \" exist!\";\n  }\n  @return map-get($theme-text-color-background, $theme);\n}\n\n/*\n  Returns the text color for the requested theme and background color if the\n  theme and background color exist. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n  The background color name can either be 'warn', 'success', 'info', 'primary'\n  or 'secondary'. If some other value gets requested, the funtion will thorw an\n  error.\n*/\n@function getThemeTextColorForBackground($theme, $color) {\n  $theme-colors: getThemeTextColorsForBackground($theme);\n  @if not exists(map-keys($theme-colors), $color) {\n    @error \"Text color for background color with name '#{$color}' does not\"\n    + \" exist!\";\n  }\n  @return  map-get($theme-colors, $color);\n}\n\n/*\n  Returns the text color for the background color 'warn' for the requested theme\n  if the theme exists. The theme name can either be 'night' or 'light'. If some\n  other value gets reuqested, the function will throw an error.\n*/\n@function getThemeWarnTextColorForBackground($theme) {\n  @return getThemeTextColorForBackground($theme, 'warn');\n}\n\n/*\n  Returns the text color for the background color 'success' for the requested theme\n  if the theme exists. The theme name can either be 'night' or 'light'. If some\n  other value gets reuqested, the function will throw an error.\n*/\n@function getThemeSuccessTextColorForBackground($theme) {\n  @return getThemeTextColorForBackground($theme, 'success');\n}\n\n/*\n  Returns the text color for the background color 'info' for the requested theme\n  if the theme exists. The theme name can either be 'night' or 'light'. If some\n  other value gets reuqested, the function will throw an error.\n*/\n@function getThemeInfoTextColorForBackground($theme) {\n  @return getThemeTextColorForBackground($theme, 'info');\n}\n\n/*\n  Returns the text color for the background color 'primary' for the requested\n  theme if the theme exists. The theme name can either be 'night' or 'light'.\n  If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemePrimaryTextColorForBackground($theme) {\n  @return getThemeTextColorForBackground($theme, 'primary');\n}\n\n/*\n  Returns the text color for the background color 'secondary' for the requested\n  theme if the theme exists. The theme name can either be 'night' or 'light'.\n  If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeSecondaryTextColorForBackground($theme) {\n  @return getThemeTextColorForBackground($theme, 'secondary');\n}\n\n\n\n/********** Theme Background Hover Color for Background - Functions **********/\n\n/*\n  Returns a map for the requested theme if the theme exists. The theme name can\n  either be 'night' or 'light'. If some other value get reuqested, the function\n  will throw an error. The map contains theme dependent background hover colors\n  for the theme independent background colors:\n  (\n    'warn': {background hover color},\n    'success': {background hover color},\n    'info': {background hover color},\n    'primary': {background hover color},\n    'secondary': {background hover color},\n  )\n*/\n@function getThemeBackgroundHoverColorsForBackground($theme) {\n  @if not exists(map-keys($theme-background-hover-color-background), $theme) {\n    @error \"Background hover colors for backgrounds for theme with name\"\n    + \" '#{$theme}' do not exist!\";\n  }\n  @return map-get($theme-background-hover-color-background, $theme);\n}\n\n/*\n  Returns the background hover color for the requested theme and background\n  color if the theme and background color exist. The theme name can either be\n  'night' or 'light'. If some other value gets reuqested, the function will\n  throw an error. The background color name can either be 'warn', 'success',\n  'info', 'primary' or 'secondary'. If some other value gets requested, the\n  funtion will thorw an error.\n*/\n@function getThemeBackgroundHoverColorForBackground($theme, $color) {\n  $theme-colors: getThemeBackgroundHoverColorsForBackground($theme);\n  @if not exists(map-keys($theme-colors), $color) {\n    @error \"Background hover color for background color with name '#{$color}'\"\n    + \" does not exist!\";\n  }\n  @return map-get($theme-colors, $color);\n}\n\n/*\n  Returns the background hover color for the background color 'warn' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeWarnBackgroundHoverColorForBackground($theme) {\n  @return getThemeBackgroundHoverColorForBackground($theme, 'warn');\n}\n\n/*\n  Returns the background hover color for the background color 'success' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeSuccessBackgroundHoverColorForBackground($theme) {\n  @return getThemeBackgroundHoverColorForBackground($theme, 'success');\n}\n\n/*\n  Returns the background hover color for the background color 'info' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeInfoBackgroundHoverColorForBackground($theme) {\n  @return getThemeBackgroundHoverColorForBackground($theme, 'info');\n}\n\n/*\n  Returns the background hover color for the background color 'primary' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemePrimaryBackgroundHoverColorForBackground($theme) {\n  @return getThemeBackgroundHoverColorForBackground($theme, 'primary');\n}\n\n/*\n  Returns the background hover color for the background color 'secondary' for\n  the requested theme if the theme exists. The theme name can either be 'night'\n  or 'light'. If some other value gets reuqested, the function will throw an\n  error.\n*/\n@function getThemeSecondaryBackgroundHoverColorForBackground($theme) {\n  @return getThemeBackgroundHoverColorForBackground($theme, 'secondary');\n}\n\n\n\n/************* Theme Text Hover Color for Background - Functions *************/\n\n/*\n  Returns a map for the requested theme if the theme exists. The theme name can\n  either be 'night' or 'light'. If some other value get reuqested, the function\n  will throw an error. The map contains theme dependent text hover colors for\n  the theme independent background colors:\n  (\n    'warn': {text color},\n    'success': {text color},\n    'info': {text color},\n    'primary': {text color},\n    'secondary': {text color}\n  )\n*/\n@function getThemeTextHoverColorsForBackground($theme) {\n  @if not exists(map-keys($theme-text-hover-color-theme-background), $theme) {\n    @error \"Text hover colors for backgrounds for theme with name '#{$theme}'\"\n    + \" do not exist!\";\n  }\n  @return map-get($theme-text-hover-color-theme-background, $theme);\n}\n\n/*\n  Returns the text hover color for the requested theme and background color if\n  the theme and background color exist. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n  The background color name can either be 'warn', 'success', 'info', 'primary'\n  or 'secondary'. If some other value gets requested, the funtion will thorw an\n  error.\n*/\n@function getThemeTextHoverColorForBackground($theme, $color) {\n  $theme-colors: getThemeTextHoverColorsForBackground($theme);\n  @if not exists(map-keys($theme-colors), $color) {\n    @error \"Text hover color for background color with name '#{$color}' does\"\n    + \" not exist!\";\n  }\n  @return  map-get($theme-colors, $color);\n}\n\n/*\n  Returns the text hover color for the background color 'warn' for the requested\n  theme if the theme exists. The theme name can either be 'night' or 'light'.\n  If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeWarnTextHoverColorForBackground($theme) {\n  @return getThemeTextHoverColorForBackground($theme, 'warn');\n}\n\n/*\n  Returns the text hover color for the background color 'success' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeSuccessTextHoverColorForBackground($theme) {\n  @return getThemeTextHoverColorForBackground($theme, 'success');\n}\n\n/*\n  Returns the text hover color for the background color 'info' for the requested\n  theme if the theme exists. The theme name can either be 'night' or 'light'.\n  If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeInfoTextHoverColorForBackground($theme) {\n  @return getThemeTextHoverColorForBackground($theme, 'info');\n}\n\n/*\n  Returns the text hover color for the background color 'primary' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemePrimaryTextHoverColorForBackground($theme) {\n  @return getThemeTextHoverColorForBackground($theme, 'primary');\n}\n\n/*\n  Returns the text hover color for the background color 'secondary' for the\n  requested theme if the theme exists. The theme name can either be 'night' or\n  'light'. If some other value gets reuqested, the function will throw an error.\n*/\n@function getThemeSecondaryTextHoverColorForBackground($theme) {\n  @return getThemeTextHoverColorForBackground($theme, 'secondary');\n}\n","/*\n  Checks if the name exists in names. Returns true if it exists and false otherwise.\n*/\n@function exists($names, $name) {\n  $exists: false;\n  @each $test in $names {\n    @if $test == $name {\n      $exists: true;\n    }\n  }\n  @return $exists;\n}\n","/*****************************************************************************\n                            Border - Settings\n******************************************************************************/\n\n// colors\n$border-color-dark: $dark;\n$border-color-bright: $bright;\n\n// widths\n$border-width-s: 2px;\n$border-width-d: 3px;\n$border-width-m: 4px;\n$border-width-l: 5px;\n\n// radii\n$border-radius-s: $spacing-s / 1.3;\n$border-radius-d: $spacing-d / 1.3;\n$border-radius-m: $spacing-m / 1.3;\n$border-radius-l: $spacing-l / 1.3;\n","/*****************************************************************************\n                            Border - Naming\n******************************************************************************/\n\n// colors\n$border-colors: (\n  'dark': $border-color-dark,\n  'bright': $border-color-bright\n);\n\n// widths\n$border-widths: (\n  's': $border-width-s,\n  'd': $border-width-d,\n  'm': $border-width-m,\n  'l': $border-width-l\n);\n\n// radii\n$border-radii: (\n  's': $border-radius-s,\n  'd': $border-radius-d,\n  'm': $border-radius-m,\n  'l': $border-radius-l\n);\n","/*****************************************************************************\n                            Border - Functions\n******************************************************************************/\n\n/*\n  Returns the border-color, specified by the parameter.\n*/\n@function getBorderColor($border-color) {\n  @if not exists(map-keys($border-colors), $border-color) {\n    @error \"Border-color with name '#{$border-color}' does not exist!\";\n  }\n  @return map-get($border-colors, $border-color);\n}\n\n/*\n  Returns the border-width, specified by the parameter.\n*/\n@function getBorderWidth($border-width) {\n  @if not exists(map-keys($border-widths), $border-width) {\n    @error \"Border-wdith with name '#{$border-width}' does not exist!\";\n  }\n  @return map-get($border-widths, $border-width);\n}\n\n\n/*\n  Returns the border-radius, specified by the parameter.\n*/\n@function getBorderRadius($border-radius) {\n  @if not exists(map-keys($border-radii), $border-radius) {\n    @error \"Border-radius with name '#{$border-radius}' does not exist!\";\n  }\n  @return map-get($border-radii, $border-radius);\n}\n","/*****************************************************************************\n                            Border - Classes\n******************************************************************************/\n\n/*\n  Creates a border class for each border color, width and radius.\n\n\n  Attributes:\n  - color: 'dark', 'bright'\n  - width: 's', 'd', 'm', 'l'\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-[color]-[width]-[radius]'\n*/\n@each $border-color in map-keys($border-colors) {\n  @each $border-width in map-keys($border-widths) {\n    @each $border-radius in map-keys($border-radii) {\n      .sb-border-#{$border-color}-#{$border-width}-#{$border-radius} {\n        border-color: getBorderColor($border-color);\n        border-width: getBorderWidth($border-width);\n        border-radius: getBorderRadius($border-radius);\n        border-style: solid;\n      }\n    }\n  }\n}\n\n/*\n  Creates a border radius class for each border radius.\n\n\n  Attributes:\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-radius-[radius]'\n*/\n@each $border-radius in map-keys($border-radii) {\n  .sb-border-radius-#{$border-radius} {\n    border-radius: getBorderRadius($border-radius);\n  }\n}\n","/*****************************************************************************\r\n                              Typography - Settings\r\n******************************************************************************/\n\n/*\n  Imports the following font faces from goolge fonts api (https://fonts.google.com/):\n\n  - Inter (https://fonts.google.com/specimen/Inter)\n    - Thin 100\n    - Extra-light 200\n    - Light 300\n    - Regular 400\n    - Medium 500\n    - Semi-bold 600\n    - Bold 700\n    - Extra-bold 800\n    - Black 900\n\n  - Abril Fatface (https://fonts.google.com/specimen/Abril+Fatface)\n    - Regular 400\n*/\n@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\n\n// weights\n$font-weight-regular: normal;\n$font-weight-bold: bold;\n\n// fontfaces\n$fontface-default: 'Inter', sans-serif;\n$fontface-display: 'Abril Fatface', cursive;\n\n// sizes\n$font-size-s: 0.85rem;\n$font-size-d: 1rem;\n$font-size-m: 1.2rem;\n$font-size-l: 1.35rem;\n$font-size-xl: 1.45rem;\n","/*****************************************************************************\r\n                              Icon - Settings\r\n******************************************************************************/\n\n/*\n  Imports material icons form the google fonts api (https://fonts.google.com/).\n\n  The icons can be found undr 'https://fonts.google.com/icons'.\n*/\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n\n// colors\n$icon-warn: $warn;\n$icon-success: $success;\n$icon-info: $info;\n$icon-primary: $primary;\n$icon-secondary: $secondary;\n\n// sizes\n$icon-size-factor: 1.5;\n$icon-size-s: $font-size-s * $icon-size-factor * strip-unit($font-size-s);\n$icon-size-d: $font-size-d * $icon-size-factor * strip-unit($font-size-d);\n$icon-size-m: $font-size-m * $icon-size-factor * strip-unit($font-size-m);\n$icon-size-l: $font-size-l * $icon-size-factor * strip-unit($font-size-l);\n","/*****************************************************************************\r\n                              Typography - Naming\r\n******************************************************************************/\n\n// weights\n$font-weights: (\n  'regular': $font-weight-regular,\n  'bold': $font-weight-bold\n);\n\n// fontfaces\n$fontfaces: (\n  'default': $fontface-default,\n  'display': $fontface-display\n);\n\n// sizes\n$font-sizes: (\n  \"s\": $font-size-s,\n  \"d\": $font-size-d,\n  \"m\": $font-size-m,\n  \"l\": $font-size-l,\n  \"xl\": $font-size-xl,\n);\n","/*****************************************************************************\r\n                              Typography - Functions\r\n******************************************************************************/\n\n/*\n  Returns the font-weight, specified by the parameter.\n*/\n@function getFontWeight($font-weight) {\n  @if not exists(map-keys($font-weights), $font-weight) {\n    @error \"Font-weight with name '#{$font-weight}' does not exist!\";\n  }\n  @return map-get($font-weights, $font-weight);\n}\n\n\n/*\n  Returns the fontface, specified by the parameter.\n*/\n@function getFontface($fontface) {\n  @if not exists(map-keys($fontfaces), $fontface) {\n    @error \"Fontface with name '#{$fontface}' does not exist!\";\n  }\n  @return map-get($fontfaces, $fontface);\n}\n\n\n/*\n  Returns the font-size, specified by the parameter.\n*/\n@function getFontSize($font-size) {\n  @if not exists(map-keys($font-sizes), $font-size) {\n    @error \"Font-size with name '#{$font-size}' does not exist!\";\n  }\n  @return map-get($font-sizes, $font-size);\n}\n","/*****************************************************************************\r\n                              Typography - Classes\r\n******************************************************************************/\n\n/*\n  Defines the root font-weight class with all its weights.\n\n  Attributes:\n  - weight: 'regular', 'bold'\n\n  ROOT: .sb-font-weight-[weight]\n*/\n@each $font-weight in map-keys($font-weights) {\n  .sb-font-weight-#{$font-weight} {\n    font-weight: getFontWeight($font-weight);\n  }\n}\n\n/*\n  Defines the root fontface class with all its fontfaces.\n\n  Attributes:\n  - fontface: 'default', 'display'\n\n  ROOT: .sb-fontface-[fontface]\n*/\n@each $fontface in map-keys($fontfaces) {\n  .sb-fontface-#{$fontface} {\n    font-family: getFontface($fontface);\n  }\n}\n\n/*\n  Defines the root font-size class with all its sizes.\n\n  Attributes:\n  - size: 's', 'm', 'l', 'd'\n\n  ROOT: .sb-font-size-[size]\n*/\n@each $font-size in map-keys($font-sizes) {\n  .sb-font-size-#{$font-size} {\n    font-size: getFontSize($font-size);\n  }\n}\n","/*****************************************************************************\n                            Background - Classes\n******************************************************************************/\n\n/*\n  Creates a background class for each background color.\n\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  ROOT '.sb-bg-[color]'\n*/\n@each $color in map-keys($background-colors) {\n  .sb-bg-#{$color} {\n    background-color: getBackgroundColor($color);\n  }\n}\n","/*****************************************************************************\r\n                              Icon - Naming\r\n******************************************************************************/\n\n// colors\n$icon-colors: (\n  'warn': $icon-warn,\n  'success': $icon-success,\n  'info': $icon-info,\n  'primary': $icon-primary,\n  'secondary': $icon-secondary\n);\n\n// sizes\n$icon-sizes: (\n  's': $icon-size-s,\n  'm': $icon-size-m,\n  'd': $icon-size-d,\n  'l': $icon-size-l\n);\n","/*****************************************************************************\r\n                              Icon - Classes\r\n******************************************************************************/\n\n/*\n  Adds color to an icon.\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.icon--[color]' for ROOT '.sb-icon'\n*/\n@mixin icon-color-class($icon-color) {\n  &.#{$sb-el-icon-root}--#{$icon-color} {\n    color: map-get($icon-colors, $icon-color);\n  }\n}\n\n/*\n  Adds different sizes to the icon.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.icon--[size] for ROOT '.sb-icon'\n*/\n@mixin icon-size-class($icon-size) {\n  &.#{$sb-el-icon-root}--#{$icon-size} {\n    font-size: map-get($icon-sizes, $icon-size);\n  }\n}\n\n\n/*\n  Defines the root icon class with all its sizes.\n\n  ROOT: .sb-icon\n*/\n$sb-el-icon-root: 'sb-el-icon';\n.#{$sb-el-icon-root} {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  display: block;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Support for IE. */\n  font-feature-settings: 'liga';\n\n  @each $icon-size in map-keys($icon-sizes) {\n    @include icon-size-class($icon-size);\n  }\n\n  @each $icon-color in map-keys($icon-colors) {\n    @include icon-color-class($icon-color);\n  }\n}\n","/*****************************************************************************\n                            Form - Settings\n******************************************************************************/\n\n/*\n  All form classes should have the same height properties. Benefits consistency.\n*/\n// heigts\n$form-height-s: $spacing-s * 2;\n$form-height-d: $spacing-d * 2;\n$form-height-m: $spacing-m * 2;\n$form-height-l: $spacing-l * 2;\n\n$form-font-size-s: $font-size-s;\n$form-font-size-d: $font-size-d;\n$form-font-size-m: $font-size-m;\n$form-font-size-l: $font-size-l;\n","/*****************************************************************************\n                              Form - Naming\n******************************************************************************/\n\n// heights\n$form-heights: (\n  's': $form-height-s,\n  'd': $form-height-d,\n  'm': $form-height-m,\n  'l': $form-height-l\n)\n","/*****************************************************************************\n                            Form - Classes\n******************************************************************************/\n\n@mixin form-color-class($theme, $color) {\n  &.#{$sb-el-form-root}--#{$theme}-#{$color} {\n    .#{$sb-el-form-root}__header {\n      color: getThemeTextColor($theme);\n    }\n    .#{$sb-el-form-root}__footer {\n      border-color: getThemeTextColor($theme);\n    }\n  }\n}\n\n/*\n  Defines the root button class with all its sizes and colors.\n\n  ROOT .sb-el-form\n*/\n$sb-el-form-root: 'sb-el-form';\n.#{$sb-el-form-root} {\n  border-radius: $spacing-s;\n  padding: $spacing-s;\n\n  .#{$sb-el-form-root}__header {\n    font-size: getFontSize('l');\n    display: flex;\n    margin: $spacing-d 0;\n\n    &.is-left {\n      justify-content: flex-start;\n    }\n\n    &.is-center {\n      justify-content: center;\n    }\n\n    &.is-right {\n      justify-content: flex-end;\n    }\n  }\n\n  .#{$sb-el-form-root}__content {\n    display: grid;\n    grid-gap: $spacing-d;\n\n    .sb-el-form-group-separator {\n      margin: 0;\n    }\n\n    .sb-el-form-group {\n      padding: 0;\n    }\n  }\n\n  .#{$sb-el-form-root}__footer {\n    border-top: 1px solid;\n    padding-top: $spacing-s;\n    margin-top: $spacing-d;\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n\n    &.is-left {\n      justify-content: flex-start;\n    }\n\n    &.is-center {\n      justify-content: center;\n    }\n\n    &.is-right {\n      justify-content: flex-end;\n    }\n\n    .#{$sb-el-form-root}__footer-element {\n\n    }\n  }\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include form-color-class($theme, $color);\n    }\n  }\n}\n","$spacing-s: 0.7rem;\n$spacing-d: 1rem;\n$spacing-m: 1.4rem;\n$spacing-l: 1.8rem;\n","/*****************************************************************************\n                            Button - Settings\n******************************************************************************/\n\n// border-radius\n$button-border-radius: $border-radius-s;\n\n// min width\n$button-min-width: 60px;\n","/*****************************************************************************\n                            Button - Classes\n******************************************************************************/\n\n/*\n  Adds color and hover to a button. Also creates the inverse of the colors.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-btn--[theme]-[color]' for ROOT '.sb-el-btn'\n*/\n@mixin button-color-class($theme, $color) {\n  &.#{$sb-el-button-root}--#{$theme}-#{$color} {\n    background: getBackgroundColor($color);\n    color: getThemeTextColorForBackground($theme, $color);\n    @include ease(300ms);\n    &:hover {\n      background: getThemeBackgroundHoverColorForBackground($theme, $color);\n      color: getThemeTextHoverColorForBackground($theme, $color);\n    }\n    &:disabled:hover {\n      background: getBackgroundColor($color);\n      color: getThemeTextColorForBackground($theme, $color);\n    }\n    @include button-plain-color-class($theme, $color);\n  }\n}\n\n/*\n  Adds inverse colors as in the normal class.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-plain' for OPTION '.sb-el-btn--[color]' -> ROOT '.sb-el-btn'\n*/\n@mixin button-plain-color-class($theme, $color) {\n  &.is-plain {\n    background: getThemeBackgroundHoverColorForBackground($theme, $color);\n    color: getThemeTextHoverColorForBackground($theme, $color);\n    &:hover {\n      background: getBackgroundColor($color);\n      color: getThemeTextColorForBackground($theme, $color);\n    }\n    &:disabled:hover {\n      background: getThemeBackgroundHoverColorForBackground($theme, $color);\n      color: getThemeTextHoverColorForBackground($theme, $color);\n    }\n  }\n}\n\n/*\n  Adds different sizes to the button.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.sb-el-btn--[size]' for ROOT '.sb-el-btn'\n*/\n@mixin button-size-class($form-height) {\n  $height: map-get($form-heights, $form-height);\n  &.#{$sb-el-button-root}--#{$form-height} {\n    min-width: $height * 2;\n    height: $height;\n    @include paddingX($height/1.5);\n\n    @include button-pill-class($form-height);\n    @include button-round-class($form-height);\n  }\n}\n\n/*\n  Adds option if button is pill or normal.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-pill' for OPTION '.sb-el-btn--[size]' -> ROOT '.sb-el-btn'\n*/\n@mixin button-pill-class($form-height) {\n  &.is-pill {\n    border-radius: map-get($form-heights, $form-height) / 2;\n  }\n}\n\n/*\n  Adds option if button is round or normal.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-round' for OPTION '.sb-el-btn--[size]' -> ROOT '.sb-el-btn'\n*/\n@mixin button-round-class($form-height) {\n  &.is-round {\n    $height: map-get($form-heights, $form-height);\n    height: $height;\n    width: $height;\n    border-radius: $height / 2;\n    min-width: 0;\n    padding: 0;\n  }\n}\n\n/*\n  Defines the root button class with all its sizes and colors.\n\n  ROOT .sb-el-btn\n*/\n$sb-el-button-root: 'sb-el-btn';\n.#{$sb-el-button-root} {\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  display: block;\n  box-sizing: border-box;\n\n  border-radius: $button-border-radius;\n\n  font-size: getFontSize('d');\n  font-weight: getFontWeight('regular');\n  font-family: getFontface('default');\n\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  @each $form-height in map-keys($form-heights) {\n    @include button-size-class($form-height);\n  }\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include button-color-class($theme, $color);\n    }\n  }\n\n}\n","@mixin paddingX($padding) {\n  padding-left: $padding;\n  padding-right: $padding;\n}\n\n@mixin paddingY($padding) {\n  padding-top: $padding;\n  padding-bottom: $padding;\n}\n","@mixin easeInOut($time) {\n  transition: all $time ease-in-out;\n}\n\n@mixin easeIn($time) {\n  transition: all $time ease-in;\n}\n\n@mixin easeOut($time) {\n  transition: all $time ease-out;\n}\n\n@mixin ease($time) {\n  transition: all $time ease;\n}\n\n@mixin linear($time) {\n  transition: all $time linear;\n}\n","/*****************************************************************************\r\n                              Toggle-Switch - Classes\r\n******************************************************************************/\n\n/*\n  Adds different colors to a toggle switch. The color changes if the state of\n  the toggle switch is changing. The state is determined by the OPTION '.is-on'\n  or '.is-off'. The states have to be set dynamically.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-toggle-switch--[theme]-[color]' for ROOT '.sb-el-toggle-switch'\n*/\n@mixin toggle-switch-color-class($theme, $color) {\n  &.#{$sb-el-toggle-switch-root}--#{$theme}-#{$color} {\n    border: 2px solid getThemeTextHoverColorForBackground($theme, $color);\n    &.is-off {\n      .#{$sb-el-toggle-switch-root}__toggle {\n        background: getThemeTextHoverColorForBackground($theme, $color);\n      }\n    }\n\n    &.is-on {\n      background: getBackgroundColor($color);\n      .#{$sb-el-toggle-switch-root}__toggle {\n        background: getThemeTextColorForBackground($theme, $color);\n      }\n    }\n  }\n}\n\n/*\n  Adds different sizes to a toggle switch. Movement of the toggle does also get\n  defined. The movement is based on the toggle switch OPTION '.is-on' or '.is-off'.\n  The options have to be set dynamically.\n\n  Attributes:\n  - size: 's', 'd', 'm', 'l'\n\n  OPTION '.sb-el-toggle-switch--[size]' for ROOT '.sb-el-toggle-switch'\n*/\n@mixin toggle-switch-size-class($form-height) {\n\n  $height: map-get($form-heights, $form-height);\n  $width: $height * 2;\n  $diameter: $height / 3 * 2;\n  $padding: ($height - $diameter) / 2;\n  $innerwidth: $width - 2 * $padding;\n\n  &.#{$sb-el-toggle-switch-root}--#{$form-height} {\n    width: $width;\n    height: $height;\n    border-radius: $height / 2;\n\n    .#{$sb-el-toggle-switch-root}__toggle {\n      top: calc(#{$padding} - 2px);\n      left: calc(#{$padding} - 2px);\n      width: $diameter;\n      height: $diameter;\n      border-radius: $diameter / 2;\n    }\n\n    &.is-off {\n      .#{$sb-el-toggle-switch-root}__toggle {\n        transform: translateX(0);\n      }\n    }\n    &.is-on {\n      .#{$sb-el-toggle-switch-root}__toggle {\n        transform: translateX($innerwidth - $diameter);\n      }\n    }\n  }\n}\n\n/*\n  Creates class for a toggle switch. The class defines colors and sizes for The\n  toggle. The movement of the toggle is also defined in the size mixin.\n\n  Attributes:\n  - NONE\n\n  ROOT .sb-el-toggle-switch\n*/\n$sb-el-toggle-switch-root: 'sb-el-toggle-switch';\n.#{$sb-el-toggle-switch-root} {\n  box-sizing: border-box;\n  cursor: pointer;\n  position: relative;\n  @include ease(300ms);\n  .#{$sb-el-toggle-switch-root}__toggle {\n    position: absolute;\n    @include ease(300ms);\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n  }\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include toggle-switch-color-class($theme, $color);\n    }\n  }\n\n  @each $form-height in map-keys($form-heights) {\n    @include toggle-switch-size-class($form-height);\n  }\n}\n","/*****************************************************************************\r\n                              Checkbox - Classes\r\n******************************************************************************/\n\n/*\n  Adds different colors to a checkbox. The coloring is based on the two states\n  of the checkbos: 'checked' and 'unchecked'. The two states have to be set\n  dynamically.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-checkbox--[theme]-[color]' for ROOT '.sb-el-checkbox'\n*/\n@mixin checkbox-color-class($theme, $color) {\n  &.#{$sb-el-checkbox-root}--#{$theme}-#{$color} {\n    .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n      border-color: getBackgroundColor($color);\n    }\n    &.is-checked {\n      .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n        background: getBackgroundColor($color);\n        .#{$sb-el-checkbox-root}__tick .sb-el-icon {\n          color: getThemeTextColorForBackground($theme, $color);\n        }\n      }\n    }\n  }\n}\n\n/*\n  Adds different sizes to a checkbox. The sizes concern widht, height and\n  border-radius.\n\n  Attributes:\n  - size: 's', 'd', 'm', 'l'\n\n  OPTION '.sb-el-checkbox--[size]' for ROOT '.sb-el-checkbox'\n*/\n@mixin checkbox-size-class($form-height) {\n  $height: map-get($form-heights, $form-height);\n\n  &.#{$sb-el-checkbox-root}--#{$form-height} {\n    .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n      height: $height;\n      width: $height;\n      border-radius: $height / 3;\n\n      .#{$sb-el-checkbox-root}__tick {\n        .sb-el-icon {\n          font-size: $height / 5 * 4;\n        }\n      }\n    }\n  }\n}\n\n/*\n  Creates class for a checkbox. The class defines colors and sizes for The\n  checkbox and the tick.\n\n  Attributes:\n  - NONE\n\n  ROOT .sb-el-checkbox\n*/\n$sb-el-checkbox-root: 'sb-el-checkbox';\n.#{$sb-el-checkbox-root} {\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: $spacing-s;\n\n  .#{$sb-el-checkbox-root}__label {\n    display: none;\n  }\n\n  &.is-label {\n    .#{$sb-el-checkbox-root}__label {\n      display: block;\n      span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n      }\n    }\n\n    &.label-is-right {\n      .#{$sb-el-checkbox-root}__label {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-checkbox-root}__checkbox-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n    }\n\n    &.label-is-left {\n      .sb-checkbox__label {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-checkbox-root}__checkbox-wrapper {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n    }\n\n    &.label-is-top {\n      grid-template-columns: auto;\n      .#{$sb-el-checkbox-root}__label {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-checkbox-root}__checkbox-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n      }\n    }\n\n    &.label-is-bottom {\n      grid-template-columns: auto;\n      .#{$sb-el-checkbox-root}__label {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n      }\n      .#{$sb-el-checkbox-root}__checkbox-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n    }\n  }\n\n  .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n    box-sizing: border-box;\n    border: 2px solid;\n    cursor: pointer;\n    @include ease(300ms);\n\n    .#{$sb-el-checkbox-root}__tick {\n      height: 100%;\n      width: 100%;\n      .sb-el-icon {\n        height: 100%;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        @include ease(300ms);\n      }\n    }\n  }\n\n\n  &.is-unchecked {\n    .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n      .#{$sb-el-checkbox-root}__tick .sb-el-icon {\n        color: transparent;\n      }\n    }\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n    &.is-label {\n      .#{$sb-el-checkbox-root}__label {\n        cursor: not-allowed;\n      }\n    }\n    .#{$sb-el-checkbox-root}__checkbox-wrapper .#{$sb-el-checkbox-root}__checkbox {\n      .#{$sb-el-checkbox-root}__tick {\n        cursor: not-allowed;\n      }\n    }\n  }\n\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include checkbox-color-class($theme, $color);\n    }\n  }\n\n  @each $form-height in map-keys($form-heights) {\n    @include checkbox-size-class($form-height);\n  }\n}\n","/*****************************************************************************\r\n                              Radio-Button - Classes\r\n******************************************************************************/\n\n/*\n  Adds different colors to a radio button. The coloring is based on the two states\n  of the checkbos: 'checked' and 'unchecked'. The two states have to be set\n  dynamically.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-radio-button--[theme]-[color]' for ROOT '.sb-el-radio-button'\n*/\n@mixin radio-button-color-class($color) {\n  &.#{$sb-el-radio-button-root}--#{$color} {\n    .#{$sb-el-radio-button-root}__radio-wrapper .#{$sb-el-radio-button-root}__radio {\n      border-color: getBackgroundColor($color);\n    }\n\n    &.is-checked {\n      .#{$sb-el-radio-button-root}__radio-wrapper .#{$sb-el-radio-button-root}__radio {\n        background: getBackgroundColor($color);\n      }\n    }\n  }\n}\n\n/*\n  Adds different sizes to a radio button. The sizes concern widht, height and\n  border-radius (circle).\n\n  Attributes:\n  - size: 's', 'd', 'm', 'l'\n\n  OPTION '.sb-el-radio-button--[size]' for ROOT '.sb-el-radio-button'\n*/\n@mixin radio-button-size-class($form-height) {\n  $height: map-get($form-heights, $form-height);\n\n  &.#{$sb-el-radio-button-root}--#{$form-height} {\n    .#{$sb-el-radio-button-root}__radio-wrapper .#{$sb-el-radio-button-root}__radio {\n      height: $height;\n      width: $height;\n    }\n  }\n}\n\n/*\n  Creates class for a radio button. The class defines colors and sizes for The\n  radio button and the mark.\n\n  Attributes:\n  - NONE\n\n  ROOT .sb-el-radio-button\n*/\n$sb-el-radio-button-root: 'sb-el-radio-button';\n.#{$sb-el-radio-button-root} {\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: $spacing-s;\n\n  .#{$sb-el-radio-button-root}__label {\n    display: none;\n  }\n\n  &.is-label {\n    .#{$sb-el-radio-button-root}__label {\n      display: block;\n      span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n      }\n    }\n\n    &.label-is-right {\n      .#{$sb-el-radio-button-root}__label {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-radio-button-root}__radio-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n    }\n\n    &.label-is-left {\n      .#{$sb-el-radio-button-root}__label {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-radio-button-root}__radio-wrapper {\n        grid-column: 2 / 3;\n        grid-row: 1 / 2;\n      }\n    }\n\n    &.label-is-top {\n      grid-template-columns: auto;\n      .#{$sb-el-radio-button-root}__label {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n      .#{$sb-el-radio-button-root}__radio-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n      }\n    }\n\n    &.label-is-bottom {\n      grid-template-columns: auto;\n      .#{$sb-el-radio-button-root}__label {\n        grid-column: 1 / 2;\n        grid-row: 2 / 3;\n      }\n      .#{$sb-el-radio-button-root}__radio-wrapper {\n        grid-column: 1 / 2;\n        grid-row: 1 / 2;\n      }\n    }\n  }\n\n  &.disabled {\n    cursor: not-allowed;\n    &.is-label {\n      .#{$sb-el-radio-button-root}__label {\n        cursor: not-allowed;\n      }\n      .#{$sb-el-radio-button-root}__radio-wrapper {\n        .#{$sb-el-radio-button-root}__radio {\n          cursor: not-allowed;\n        }\n      }\n    }\n  }\n\n  .#{$sb-el-radio-button-root}__radio-wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .#{$sb-el-radio-button-root}__radio {\n      box-sizing: border-box;\n      border: 2px solid;\n      cursor: pointer;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border-radius: 50%;\n      @include ease(300ms);\n    }\n  }\n\n  @each $color in $color-names {\n    @include radio-button-color-class($color);\n  }\n\n  @each $form-height in map-keys($form-heights) {\n    @include radio-button-size-class($form-height);\n  }\n}\n","/*****************************************************************************\n                              Checkbox-Group - Classes\n******************************************************************************/\n\n/*\n  Adds color to a form group.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-form-group--[theme]-[color]' for ROOT '.sb-el-form-group'\n*/\n@mixin select-button-color-class($theme, $color) {\n  &.#{$sb-el-select-button-root}--#{$theme}-#{$color} {\n    color: getThemeTextColorForBackground($theme, $color);\n\n\n    .#{$sb-el-select-button-root}__button {\n      .sb-el-icon {\n        color: getThemeTextColorForBackground($theme, $color);\n      }\n      &:hover {\n        .sb-el-icon {\n          color: getThemeTextHoverColorForBackground($theme, $color);\n        }\n      }\n      &:disabled:hover {\n        .sb-el-icon {\n          color: getThemeTextColorForBackground($theme, $color);\n        }\n      }\n    }\n\n\n    .#{$sb-el-select-button-root}__options-wrapper {\n      .#{$sb-el-select-button-root}__options {\n        background: getThemeChildBackgroundColor($theme);\n        .#{$sb-el-select-button-root}__option {\n          background: getBackgroundColor($color);\n          color: getThemeTextColorForBackground($theme, $color);\n          &:hover {\n            background: getThemeBackgroundHoverColorForBackground($theme, $color);\n            color: getThemeTextHoverColorForBackground($theme, $color);\n          }\n          &:disabled:hover {\n            background: getBackgroundColor($color);\n            color: getThemeTextColorForBackground($theme, $color);\n          }\n        }\n      }\n    }\n  }\n}\n\n/*\n  Adds different sizes to the button.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.sb-el-btn--[size]' for ROOT '.sb-el-btn'\n*/\n@mixin select-button-size-class($form-height) {\n  $height: map-get($form-heights, $form-height);\n  &.#{$sb-el-select-button-root}--#{$form-height} {\n    .#{$sb-el-select-button-root}__button {\n      width: 4 * $height;\n    }\n\n    .#{$sb-el-select-button-root}__options-wrapper {\n      .#{$sb-el-select-button-root}__options {\n        .#{$sb-el-select-button-root}__option {\n          width: 4 * $height - 2 * $spacing-s;\n          @include paddingX($spacing-s);\n          @include paddingY($spacing-s / 2);\n        }\n      }\n    }\n    @include select-button-pill-class($form-height);\n  }\n}\n\n/*\n  Adds option if button is pill or normal.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-pill' for OPTION '.sb-el-btn--[size]' -> ROOT '.sb-el-btn'\n*/\n@mixin select-button-pill-class($form-height) {\n  &.is-pill {\n    .#{$sb-el-select-button-root}__options-wrapper {\n      .#{$sb-el-select-button-root}__options {\n        border-bottom-left-radius: map-get($form-heights, $form-height) / 2;\n        border-bottom-right-radius: map-get($form-heights, $form-height) / 2;\n      }\n    }\n  }\n}\n\n/*\n  Defines the root form group class with all its sizes and colors.\n\n  ROOT .sb-el-form-group\n*/\n$sb-el-select-button-root: 'sb-el-select-button';\n.#{$sb-el-select-button-root} {\n  position: relative;\n  cursor: pointer;\n\n  $button-animation-duration: 300ms;\n  $options-animation-duration: 100ms;\n\n  .#{$sb-el-select-button-root}__button {\n    @include ease($button-animation-duration);\n    transition-delay: $options-animation-duration;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    .sb-el-icon {\n      @include ease(300ms);\n    }\n  }\n\n  .#{$sb-el-select-button-root}__options-wrapper {\n    .#{$sb-el-select-button-root}__options {\n      overflow: hidden;\n      height: auto;\n      transform-origin:top;\n      position: absolute;\n      transform: scaleY(0);\n      border-bottom-left-radius: $button-border-radius;\n      border-bottom-right-radius: $button-border-radius;\n      @include ease($options-animation-duration);\n\n      .#{$sb-el-select-button-root}__option {\n        display: flex;\n        justify-content: center;\n        @include ease(300ms);\n        &:hover {\n          background: black\n        }\n      }\n    }\n  }\n\n  &.is-open {\n    .#{$sb-el-select-button-root}__button {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      @include ease($button-animation-duration);\n      transition-delay: 0;\n\n      .sb-el-icon {\n        transform: rotate(180deg);\n      }\n    }\n    .#{$sb-el-select-button-root}__options-wrapper {\n      .#{$sb-el-select-button-root}__options {\n        transition-delay: $button-animation-duration;\n        transform: scaleY(1);\n      }\n    }\n  }\n\n  @each $form-height in map-keys($form-heights) {\n    @include select-button-size-class($form-height);\n  }\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include select-button-color-class($theme, $color);\n    }\n  }\n}\n","/*****************************************************************************\n                              Slider - Classes\n******************************************************************************/\n\n@mixin style-thumbs {\n  &::-webkit-slider-thumb {\n    @content;\n  }\n\n  &::-moz-range-thumb {\n    @content;\n  }\n\n  &::-ms-thumb {\n    @content;\n  }\n}\n\n@mixin style-tracks {\n  &::-webkit-slider-runnable-track {\n    @content;\n  }\n\n  &::-moz-range-track {\n    @content;\n  }\n\n  &::-ms-track {\n    @content;\n  }\n\n  &::-ms-fill-lower {\n    @content;\n  }\n\n  &::-ms-fill-upper {\n    @content;\n  }\n}\n\n$sb-el-slider-root: 'sb-el-slider';\n.#{$sb-el-slider-root} {\n  display: grid;\n  grid-gap: $spacing-s;\n  grid-template-columns: 1fr 2*$spacing-s;\n  grid-auto-flow: column;\n\n  &.is-label {\n    grid-template-rows: auto auto;\n  }\n\n  &.is-value {\n    .#{$sb-el-slider-root}__slider {\n      grid-column: 1 / 2;\n    }\n  }\n\n  &.is-not-value {\n    .#{$sb-el-slider-root}__slider {\n      grid-column: 1 / 3;\n    }\n  }\n\n  .#{$sb-el-slider-root}__label {\n    grid-column: 1 / 3;\n    color: white;\n  }\n\n  .#{$sb-el-slider-root}__slider {\n    -webkit-appearance: none;\n    box-sizing: border-box;\n    background: transparent;\n    width: 100%;\n    margin: 0;\n    &:focus {\n      outline: none;\n    }\n    &::-ms-track {\n      width: 100%;\n      cursor: pointer;\n\n      // Hides the slider so custom styles can be added\n      background: transparent;\n      border-color: transparent;\n      color: transparent;\n    }\n\n\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n    }\n    &::-moz-range-thumb {\n      cursor: pointer;\n    }\n    &::-ms-thumb {\n      cursor: pointer;\n    }\n    @include style-thumbs {\n      height: 2*$spacing-s;\n      width: 2*$spacing-s;\n      border-radius: $spacing-s;\n      background: $primary;\n      transform: translateY(-$spacing-s * 0.5);\n    }\n\n    @include style-tracks {\n      border-radius: $spacing-s;\n      background: getThemeBackgroundHoverColorForBackground('light', 'primary');\n      height: $spacing-s;\n    }\n\n    &:hover {\n      @include style-thumbs {\n\n      }\n\n      @include style-tracks {\n\n      }\n    }\n\n    &:focus {\n      @include style-thumbs {\n\n      }\n\n      @include style-tracks {\n\n      }\n    }\n  }\n\n  .#{$sb-el-slider-root}__value {\n    grid-column: 2 / 3;\n    vertical-align: middle;\n    text-align: center;\n    color: white;\n  }\n\n}\n","/*****************************************************************************\n                              Checkbox-Group - Classes\n******************************************************************************/\n\n/*\n  Adds color to a form group separator. Sets the separator according to the\n  background.\n\n  Attributes:\n  - theme: 'light', 'night'\n\n  OPTION '.sb-el-form-group-separator--[theme]' for ROOT\n  '.sb-el-form-group-separator'\n*/\n@mixin form-group-separator-color-class($theme) {\n  &.#{$sb-el-form-group-separator-root}--#{$theme} {\n    border-color: getThemeTextColor($theme);\n  }\n}\n\n/*\n  Defines the root form group separator class;\n\n  ROOT .sb-el-form-group-separator\n*/\n$sb-el-form-group-separator-root: 'sb-el-form-group-separator';\n.#{$sb-el-form-group-separator-root} {\n  border: 1px solid;\n  border-bottom: 0;\n  margin: $spacing-s;\n\n  @each $theme in $theme-names {\n    @include form-group-separator-color-class($theme);\n  }\n}\n\n/*\n  Adds color to a form group.\n\n  Attributes:\n  - theme: 'light', 'night'\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.sb-el-form-group--[theme]-[color]' for ROOT '.sb-el-form-group'\n*/\n@mixin form-group-color-class($theme, $color) {\n  &.#{$sb-el-form-group-root}--#{$theme}-#{$color} {\n    color: getThemeTextColor($theme);\n  }\n}\n\n/*\n  Defines the root form group class with all its sizes and colors.\n\n  ROOT .sb-el-form-group\n*/\n$sb-el-form-group-root: 'sb-el-form-group';\n.#{$sb-el-form-group-root} {\n  padding: $spacing-s;\n  &.is-options {\n    display: grid;\n    grid-gap: $spacing-s;\n\n    .#{$sb-el-form-group-root}__options-wrapper {\n      display: flex;\n      .#{$sb-el-form-group-root}__options {\n        display: grid;\n        grid-gap: $spacing-s;\n        width: auto;\n        .#{$sb-el-form-group-root}__option {\n          display: flex;\n        }\n      }\n    }\n  }\n\n  .#{$sb-el-form-group-root}__title {\n    font-size: getFontSize('m');\n  }\n\n  &.is-left {\n    .#{$sb-el-form-group-root}__title {\n      justify-self: left;\n    }\n    &.is-options {\n      .#{$sb-el-form-group-root}__options-wrapper {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  &.is-center {\n    .#{$sb-el-form-group-root}__title {\n      justify-self: center;\n    }\n    &.is-options {\n      .#{$sb-el-form-group-root}__options-wrapper {\n        justify-content: center;\n      }\n    }\n  }\n\n  &.is-right {\n    .#{$sb-el-form-group-root}__title {\n      justify-self: right;\n    }\n    &.is-options {\n      .#{$sb-el-form-group-root}__options-wrapper {\n        justify-content: flex-end;\n      }\n    }\n  }\n\n\n\n  @each $theme in $theme-names {\n    @each $color in $color-names {\n      @include form-group-color-class($theme, $color);\n    }\n  }\n}\n","body, html {\n  font-size: getFontSize('d');\n  font-weight: getFontWeight('regular');\n  font-family: getFontface('default');\n}\n"]}