{"version":3,"sourceRoot":"","sources":["file:///home/severin/gitrepo/Severin/SbTheme/scss/functions/_exists.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/border/_border-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_border.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/button/_button-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/variables/_spacings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_padding.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_typography.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_transition.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/pill/_pill-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/pill/_pill-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/pill/_pill-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/pill/_pill-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/background/_background-settings.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/background/_background-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/background/_background-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/background/_background-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/mixins/_background.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/typography/_typography-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-naming.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-functions.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/classes/icon/_icon-classes.scss","file:///home/severin/gitrepo/Severin/SbTheme/scss/global/_global-font.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAUA;AAAA;AAAA;AAWA;AAAA;AAAA;ACzBA;AAAA;AAAA;AAIA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;ACiBQ;ACZA;AFUF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAJF;EGdJ;EAIA;EARA;EHsBM;;;AAMR;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAWE;EGvCA;;;AHuCA;EGvCA;;;AHuCA;EGvCA;;;AHuCA;EGvCA;;;ACDF;AAAA;AAAA;ACAA;AAAA;AAAA;ACAA;AAAA;A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","file":"dist/sb-theme.css","sourcesContent":["/*\n  Checks if the name exists in names. Returns true if it exists and false otherwise.\n*/\n@function exists($names, $name) {\n  $exists: false;\n  @each $test in $names {\n    @if $test == $name {\n      $exists: true;\n    }\n  }\n  @return $exists;\n}\n","/*****************************************************************************\n                            Border - Settings\n******************************************************************************/\n\n// colors\n$border-color-dark: $dark;\n$border-color-bright: $bright;\n\n// widths\n$border-width-s: 1px;\n$border-width-d: 2px;\n$border-width-m: 3px;\n$border-width-l: 4px;\n\n// radii\n$border-radius-s: $spacing-s;\n$border-radius-d: $spacing-d;\n$border-radius-m: $spacing-m;\n$border-radius-l: $spacing-l;\n","/*****************************************************************************\n                            Border - Naming\n******************************************************************************/\n\n// colors\n$border-colors: (\n  'dark': $border-color-dark,\n  'bright': $border-color-bright\n);\n\n// widths\n$border-widths: (\n  's': $border-width-s,\n  'd': $border-width-d,\n  'm': $border-width-m,\n  'l': $border-width-l\n);\n\n// radii\n$border-radii: (\n  's': $border-radius-s,\n  'd': $border-radius-d,\n  'm': $border-radius-m,\n  'l': $border-radius-l\n);\n","/*****************************************************************************\n                            Border - Functions\n******************************************************************************/\n\n/*\n  Returns the border-color, specified by the parameter.\n*/\n@function getBorderColor($border-color) {\n  @if not exists(map-keys($border-colors), $border-color) {\n    @error \"Border-color with name '#{$border-color}' does not exist!\";\n  }\n  @return map-get($border-colors, $border-color);\n}\n\n/*\n  Returns the border-width, specified by the parameter.\n*/\n@function getBorderWidth($border-width) {\n  @if not exists(map-keys($border-widths), $border-width) {\n    @error \"Border-wdith with name '#{$border-width}' does not exist!\";\n  }\n  @return map-get($border-widths, $border-width);\n}\n\n\n/*\n  Returns the border-radius, specified by the parameter.\n*/\n@function getBorderRadius($border-radius) {\n  @if not exists(map-keys($border-radii), $border-radius) {\n    @error \"Border-radius with name '#{$border-radius}' does not exist!\";\n  }\n  @return map-get($border-radii, $border-radius);\n}\n","/*****************************************************************************\n                            Border - Classes\n******************************************************************************/\n\n/*\n  Creates a border class for each border color, width and radius.\n\n\n  Attributes:\n  - color: 'dark', 'bright'\n  - width: 's', 'd', 'm', 'l'\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-[color]-[width]-[radius]'\n*/\n@debug \"Create border-classes\";\n@each $border-color in map-keys($border-colors) {\n  @each $border-width in map-keys($border-widths) {\n    @each $border-radius in map-keys($border-radii) {\n      .sb-border-#{$border-color}-#{$border-width}-#{$border-radius} {\n        @include border-color($border-color);\n        @include border-width($border-width);\n        @include border-radius($border-radius);\n        border-style: solid;\n      }\n    }\n  }\n}\n\n/*\n  Creates a border radius class for each border radius.\n\n\n  Attributes:\n  - radius: 's', 'd', 'm', 'l'\n\n  ROOT '.sb-border-radius-[radius]'\n*/\n@debug \"Create border-radius-classes\";\n@each $border-radius in map-keys($border-radii) {\n  .sb-border-radius-#{$border-radius} {\n    @include border-radius($border-radius);\n  }\n}\n","/*****************************************************************************\r\n                              Typography - Settings\r\n******************************************************************************/\n\n/*\n  Imports the following font faces from goolge fonts api (https://fonts.google.com/):\n\n  - Inter (https://fonts.google.com/specimen/Inter)\n    - Thin 100\n    - Extra-light 200\n    - Light 300\n    - Regular 400\n    - Medium 500\n    - Semi-bold 600\n    - Bold 700\n    - Extra-bold 800\n    - Black 900\n\n  - Abril Fatface (https://fonts.google.com/specimen/Abril+Fatface)\n    - Regular 400\n*/\n@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\n\n// weights\n$font-weight-regular: 400;\n$font-weight-bold: 600;\n\n// fontfaces\n$fontface-default: 'Inter', sans-serif;\n$fontface-display: 'Abril Fatface', cursive;\n\n// sizes\n$font-size-s: 0.75rem;\n$font-size-d: 1rem;\n$font-size-m: 1.25rem;\n$font-size-l: 1.5rem;\n$font-size-xl: 1.75rem;\n","/*****************************************************************************\r\n                              Icon - Settings\r\n******************************************************************************/\n\n/*\n  Imports material icons form the google fonts api (https://fonts.google.com/).\n\n  The icons can be found undr 'https://fonts.google.com/icons'.\n*/\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n\n// colors\n$icon-warn: $warn;\n$icon-success: $success;\n$icon-info: $info;\n$icon-primary: $primary;\n$icon-secondary: $secondary;\n\n// sizes\n$icon-size-factor: 1.5;\n$icon-size-s: $font-size-s * $icon-size-factor;\n$icon-size-d: $font-size-d * $icon-size-factor;\n$icon-size-m: $font-size-m * $icon-size-factor;\n$icon-size-l: $font-size-l * $icon-size-factor;\n","@mixin border-radius($border-radius) {\n  border-radius: getBorderRadius($border-radius);\n}\n\n@mixin border-color($border-color) {\n  border-radius: getBorderColor($border-color);\n}\n\n@mixin border-width($border-width) {\n  border-radius: getBorderWidth($border-width);\n}\n","/*****************************************************************************\n                            Button - Settings\n******************************************************************************/\n\n// colors\n$btn-warn-background: $warn;\n$btn-warn-text: $dark;\n$btn-warn-hover-background: lighten($dark, 3%);\n$btn-warn-hover-text: $warn;\n\n$btn-success-background: $success;\n$btn-success-text: $dark;\n$btn-success-hover-background: lighten($dark, 3%);\n$btn-success-hover-text: $success;\n\n$btn-info-background: $info;\n$btn-info-text: $dark;\n$btn-info-hover-background: lighten($dark, 3%);\n$btn-info-hover-text: $info;\n\n$btn-primary-background: $primary;\n$btn-primary-text: $dark;\n$btn-primary-hover-background: lighten($dark, 3%);\n$btn-primary-hover-text: $primary;\n\n$btn-secondary-background: $secondary;\n$btn-secondary-text: $dark;\n$btn-secondary-hover-background: lighten($dark, 3%);\n$btn-secondary-hover-text: $secondary;\n\n// heights\n$button-size-factor: 2.5;\n$button-size-s: $spacing-s * $button-size-factor;\n$button-size-d: $spacing-d * $button-size-factor;\n$button-size-m: $spacing-m * $button-size-factor;\n$button-size-l: $spacing-l * $button-size-factor;\n\n\n// border-radius\n$button-border-radius: $border-radius-s;\n","/*****************************************************************************\n                            Button - Naming\n******************************************************************************/\n\n// colors\n$button-colors: (\n  'warn': (\n    'background': $btn-warn-background,\n    'text': $btn-warn-text,\n    'hover-background': $btn-warn-hover-background,\n    'hover-text': $btn-warn-hover-text\n  ),\n  'success': (\n    'background': $btn-success-background,\n    'text': $btn-success-text,\n    'hover-background': $btn-success-hover-background,\n    'hover-text': $btn-success-hover-text\n  ),\n  'info': (\n    'background': $btn-info-background,\n    'text': $btn-info-text,\n    'hover-background': $btn-info-hover-background,\n    'hover-text': $btn-info-hover-text\n  ),\n  'primary': (\n    'background': $btn-primary-background,\n    'text': $btn-primary-text,\n    'hover-background': $btn-primary-hover-background,\n    'hover-text': $btn-primary-hover-text\n  ),\n  'secondary': (\n    'background': $btn-secondary-background,\n    'text': $btn-secondary-text,\n    'hover-background': $btn-secondary-hover-background,\n    'hover-text': $btn-secondary-hover-text\n  )\n);\n\n// sizes\n$button-default-size: $button-size-d; // default size\n$button-sizes: (\n  's': $button-size-s,\n  'm': $button-size-m,\n  'l': $button-size-l,\n);\n","/*****************************************************************************\n                            Button - Functions\n******************************************************************************/\n\n/*\n  Returns a map with background-color and text-color of a button color:\n  (\n    'background': {color},\n    'text': {color}\n  )\n*/\n@function getButtonColors($button-color) {\n  @if not exists(map-keys($button-colors), $button-color) {\n    @error \"Button color with name '#{$button-color}' does not exist!\";\n  }\n  @return map-get($button-colors, $button-color);\n}\n\n/*\n  Returns the background-color of the button-colors.\n*/\n@function getButtonBackgroundColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'background');\n}\n\n/*\n  Returns the text-color of the button-colors.\n*/\n@function getButtonTextColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'text');\n}\n\n/*\n  Returns the hover-background-color of the button-colors.\n*/\n@function getButtonHoverBackgroundColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'hover-background');\n}\n\n/*\n  Returns the hover-text-color of the button-colors.\n*/\n@function getButtonHoverTextColor($button-color) {\n  @return map-get(getButtonColors($button-color), 'hover-text');\n}\n","/*****************************************************************************\n                            Button - Classes\n******************************************************************************/\n\n/*\n  Adds color and hover to a button. Also creates the inverse of the colors.\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.btn--[color]' for ROOT '.sb-btn'\n*/\n@mixin button-color-class($button-color) {\n  &.btn--#{$button-color} {\n    background: getButtonBackgroundColor($button-color);\n    color: getButtonTextColor($button-color);\n    @include ease(300ms);\n    &:hover {\n      background: getButtonHoverBackgroundColor($button-color);\n      color: getButtonHoverTextColor($button-color);\n    }\n    @include button-empty-color-class($button-color);\n  }\n}\n\n/*\n  Adds inverse colors as in the normal class.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-plain' for OPTION '.btn--[color]'\n*/\n@mixin button-empty-color-class($button-color) {\n  &.is-plain {\n    background: getButtonHoverBackgroundColor($button-color);\n    color: getButtonHoverTextColor($button-color);\n    &:hover {\n      background: getButtonBackgroundColor($button-color);\n      color: getButtonTextColor($button-color);\n    }\n  }\n}\n\n/*\n  Adds different sizes to the button.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.btn--[size] for ROOT '.sb-btn'\n*/\n@mixin button-size-class($button-size) {\n  &.btn--#{$button-size} {\n    font-size: map-get($button-sizes, $button-size)/1.7;\n    line-height: map-get($button-sizes, $button-size)/1.7;\n    height: map-get($button-sizes, $button-size);\n    @include paddingX(map-get($button-sizes, $button-size)/2.5);\n  }\n}\n\n/*\n  Defines the root button class with all its sizes and colors.\n\n  ROOT: .sb-btn\n*/\n@debug \"Create button-classes\";\n.sb-btn {\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  \n  font-size: $button-default-size/2;\n  line-height: $button-default-size/2;\n  height: $button-default-size;\n  border-radius: $button-border-radius;\n  @include paddingX($button-default-size/2);\n\n  @include font-weight('regular');\n  @include fontface('default');\n\n  @each $button-size in map-keys($button-sizes) {\n    @include button-size-class($button-size);\n  }\n\n  @each $button-color in map-keys($button-colors) {\n    @include button-color-class($button-color);\n  }\n}\n","$spacing-s: 0.5rem;\n$spacing-d: 0.75rem;\n$spacing-m: 1rem;\n$spacing-l: 1.25rem;\n","@mixin paddingX($padding) {\n  padding-left: $padding;\n  padding-right: $padding;\n}\n\n@mixin paddingY($padding) {\n  padding-top: $padding;\n  padding-bottom: $padding;\n}\n","@mixin font-weight($font-weight) {\n  font-weight: getFontWeight($font-weight);\n}\n\n@mixin fontface($fontface) {\n  font-family: getFontface($fontface);\n}\n\n@mixin font-size($font-size) {\n  font-size: getFontSize($font-size);\n}\n","@mixin easeInOut($time) {\n  transition: all $time ease-in-out;\n}\n\n@mixin easeIn($time) {\n  transition: all $time ease-in;\n}\n\n@mixin easeOut($time) {\n  transition: all $time ease-in;\n}\n\n@mixin ease($time) {\n  transition: all $time ease;\n}\n\n@mixin linear($time) {\n  transition: all $time linear;\n}\n","/*****************************************************************************\r\n                              Pill - Settings\r\n******************************************************************************/\n\n// colors\n$pill-warn-background: $warn;\n$pill-warn-text: $dark;\n$pill-warn-hover-background: lighten($dark, 3%);\n$pill-warn-hover-text: $warn;\n\n$pill-success-background: $success;\n$pill-success-text: $dark;\n$pill-success-hover-background: lighten($dark, 3%);\n$pill-success-hover-text: $success;\n\n$pill-info-background: $info;\n$pill-info-text: $dark;\n$pill-info-hover-background: lighten($dark, 3%);\n$pill-info-hover-text: $info;\n\n$pill-primary-background: $primary;\n$pill-primary-text: $dark;\n$pill-primary-hover-background: lighten($dark, 3%);\n$pill-primary-hover-text: $primary;\n\n$pill-secondary-background: $secondary;\n$pill-secondary-text: $dark;\n$pill-secondary-hover-background: lighten($dark, 3%);\n$pill-secondary-hover-text: $secondary;\n\n// sizes\n$pill-pill-size-factor: 2.5;\n$pill-size-s: $spacing-s * $pill-pill-size-factor;\n$pill-size-d: $spacing-d * $pill-pill-size-factor;\n$pill-size-m: $spacing-m * $pill-pill-size-factor;\n$pill-size-l: $spacing-l * $pill-pill-size-factor;\n","/*****************************************************************************\r\n                              Pill - Naming\r\n******************************************************************************/\n\n// colors\n$pill-colors: (\n  'warn': (\n    'background': $pill-warn-background,\n    'text': $pill-warn-text,\n    'hover-background': $pill-warn-hover-background,\n    'hover-text': $pill-warn-hover-text\n  ),\n  'success': (\n    'background': $pill-success-background,\n    'text': $pill-success-text,\n    'hover-background': $pill-success-hover-background,\n    'hover-text': $pill-success-hover-text\n  ),\n  'info': (\n    'background': $pill-info-background,\n    'text': $pill-info-text,\n    'hover-background': $pill-info-hover-background,\n    'hover-text': $pill-info-hover-text\n  ),\n  'primary': (\n    'background': $pill-primary-background,\n    'text': $pill-primary-text,\n    'hover-background': $pill-primary-hover-background,\n    'hover-text': $pill-primary-hover-text\n  ),\n  'secondary': (\n    'background': $pill-secondary-background,\n    'text': $pill-secondary-text,\n    'hover-background': $pill-secondary-hover-background,\n    'hover-text': $pill-secondary-hover-text\n  )\n);\n\n// sizes \n$pill-default-size: $pill-size-d; // default size\n$pill-sizes: (\n  's': $pill-size-s,\n  'm': $pill-size-m,\n  'l': $pill-size-l,\n);\n","/*****************************************************************************\r\n                              Pill - Functions\r\n******************************************************************************/\n\n/*\n  Returns a map with background-color and text-color of a pill color:\n  (\n    'background': {color},\n    'text': {color}\n  )\n*/\n@function getPillColors($pill-color) {\n  @if not exists(map-keys($pill-colors), $pill-color) {\n    @error \"Pill color with name '#{$pill-color}' does not exist!\";\n  }\n  @return map-get($pill-colors, $pill-color);\n}\n\n/*\n  Returns the background-color of the pill-colors.\n*/\n@function getPillBackgroundColor($pill-color) {\n  @return map-get(getPillColors($pill-color), 'background');\n}\n\n/*\n  Returns the text-color of the pill-colors.\n*/\n@function getPillTextColor($pill-color) {\n  @return map-get(getPillColors($pill-color), 'text');\n}\n\n/*\n  Returns the hover-background-color of the pill-colors.\n*/\n@function getPillHoverBackgroundColor($pill-color) {\n  @return map-get(getPillColors($pill-color), 'hover-background');\n}\n\n/*\n  Returns the hover-text-color of the pill-colors.\n*/\n@function getPillHoverTextColor($pill-color) {\n  @return map-get(getPillColors($pill-color), 'hover-text');\n}\n","/*****************************************************************************\r\n                              Pill - Classes\r\n******************************************************************************/\n\n/*\n  Adds color and hover to a pill. Also creates the inverse of the colors.\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.pill--[color]' for ROOT '.sb-pill'\n*/\n@mixin pill-color-class($pill-color) {\n  &.pill--#{$pill-color} {\n    background: getPillBackgroundColor($pill-color);\n    color: getPillTextColor($pill-color);\n    @include ease(300ms);\n    &:hover {\n      background: getPillHoverBackgroundColor($pill-color);\n      color: getPillHoverTextColor($pill-color);\n    }\n    @include pill-empty-color-class($pill-color);\n  }\n}\n\n/*\n  Adds inverse colors as in the normal class.\n\n  Attributes:\n  - NONE\n\n  OPTION '.is-plain' for OPTION '.pill--[color]'\n*/\n@mixin pill-empty-color-class($pill-color) {\n  &.is-plain {\n    background: getPillHoverBackgroundColor($pill-color);\n    color: getPillHoverTextColor($pill-color);\n    &:hover {\n      background: getPillBackgroundColor($pill-color);\n      color: getPillTextColor($pill-color);\n    }\n  }\n}\n\n/*\n  Adds different sizes to the pill.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.pill--[size] for ROOT '.sb-pill'\n*/\n@mixin pill-size-class($pill-size) {\n  &.pill--#{$pill-size} {\n    font-size: map-get($pill-sizes, $pill-size)/1.7;\n    line-height: map-get($pill-sizes, $pill-size)/1.7;\n    height: map-get($pill-sizes, $pill-size);\n    border-radius: map-get($pill-sizes, $pill-size)/2;\n    @include paddingX(map-get($pill-sizes, $pill-size)/2.5);\n  }\n}\n\n/*\n  Defines the root pill class with all its sizes and colors.\n\n  ROOT: .sb-pill\n*/\n@debug \"Create pill-classes\";\n.sb-pill {\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n\n  font-size: $pill-default-size/2;\n  line-height: $pill-default-size/2;\n  height: $pill-default-size;\n  border-radius: $pill-default-size/2;\n  @include paddingX($pill-default-size/2);\n\n  @include fontface('default');\n  @include font-weight('regular');\n\n  @each $pill-size in map-keys($pill-sizes) {\n    @include pill-size-class($pill-size);\n  }\n\n  @each $pill-color in map-keys($pill-colors) {\n    @include pill-color-class($pill-color);\n  }\n}\n","/*****************************************************************************\n                            Background - Settings\n******************************************************************************/\n\n// colors\n$bg-warn: $warn;\n$bg-success: $success;\n$bg-info: $info;\n$bg-primary: $primary;\n$bg-secondary: $secondary;\n$bg-dark: $dark;\n$bg-bright: $bright;\n","/*****************************************************************************\n                            Border - Naming\n******************************************************************************/\n\n// colors\n$background-colors: (\n  'warn': $bg-warn,\n  'success': $bg-success,\n  'info': $bg-info,\n  'primary': $bg-primary,\n  'secondary': $bg-secondary,\n  'dark': $bg-dark,\n  'bright': $bg-bright\n);\n","/*****************************************************************************\n                            Border - Functions\n******************************************************************************/\n\n/*\n  Returns the background-color, specified by the parameter.\n*/\n@function getBackgroundColor($background-color) {\n  @if not exists(map-keys($background-colors), $background-color) {\n    @error \"Background-color with name '#{$background-color}' does not exist!\";\n  }\n  @return map-get($background-colors, $background-color);\n}\n","/*****************************************************************************\n                            Background - Classes\n******************************************************************************/\n\n/*\n  Creates a background class for each background color.\n\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary', 'dark', 'bright'\n\n  ROOT '.sb-bg-[color]'\n*/\n@debug \"Create background-color-classes\";\n@each $background-color in map-keys($background-colors) {\n  .sb-bg-#{$background-color} {\n    @include background-color($background-color)\n  }\n}\n","@mixin background-color($background-color) {\n  background-color: getBackgroundColor($background-color);\n}\n","/*****************************************************************************\r\n                              Typography - Naming\r\n******************************************************************************/\n\n// weights\n$font-weights: (\n  'regular': $font-weight-regular,\n  'bold': $font-weight-bold\n);\n\n// fontfaces\n$fontfaces: (\n  'default': $fontface-default,\n  'display': $fontface-display\n);\n\n// sizes\n$font-sizes: (\n  \"s\": $font-size-s,\n  \"d\": $font-size-d,\n  \"m\": $font-size-m,\n  \"l\": $font-size-l,\n  \"xl\": $font-size-xl,\n);\n","/*****************************************************************************\r\n                              Typography - Functions\r\n******************************************************************************/\n\n/*\n  Returns the font-weight, specified by the parameter.\n*/\n@function getFontWeight($font-weight) {\n  @if not exists(map-keys($font-weights), $font-weight) {\n    @error \"Font-weight with name '#{$font-weight}' does not exist!\";\n  }\n  @return map-get($font-weights, $font-weight);\n}\n\n\n/*\n  Returns the fontface, specified by the parameter.\n*/\n@function getFontface($fontface) {\n  @if not exists(map-keys($fontfaces), $fontface) {\n    @error \"Fontface with name '#{$fontface}' does not exist!\";\n  }\n  @return map-get($fontfaces, $fontface);\n}\n\n\n/*\n  Returns the font-size, specified by the parameter.\n*/\n@function getFontSize($font-size) {\n  @if not exists(map-keys($font-sizes), $font-size) {\n    @error \"Font-size with name '#{$font-size}' does not exist!\";\n  }\n  @return map-get($font-sizes, $font-size);\n}\n","/*****************************************************************************\r\n                              Typography - Classes\r\n******************************************************************************/\n\n/*\n  Defines the root font-weight class with all its weights.\n\n  Attributes:\n  - weight: 'regular', 'bold'\n\n  ROOT: .sb-font-weight-[weight]\n*/\n@debug \"Create font-weight-classes\";\n@each $font-weight in map-keys($font-weights) {\n  .sb-font-weight-#{$font-weight} {\n    font-weight: getFontWeight($font-weight);\n  }\n}\n\n/*\n  Defines the root fontface class with all its fontfaces.\n\n  Attributes:\n  - fontface: 'default', 'display'\n\n  ROOT: .sb-fontface-[fontface]\n*/\n@debug \"Create fontface-classes\";\n@each $fontface in map-keys($fontfaces) {\n  .sb-fontface-#{$fontface} {\n    font-family: getFontface($fontface);\n  }\n}\n\n/*\n  Defines the root font-size class with all its sizes.\n\n  Attributes:\n  - size: 's', 'm', 'l', 'd'\n\n  ROOT: .sb-font-size-[size]\n*/\n@debug \"Create font-size-classes\";\n@each $font-size in map-keys($font-sizes) {\n  .sb-font-size-#{$font-size} {\n    @include font-size($font-size);\n  }\n}\n","/*****************************************************************************\r\n                              Icon - Naming\r\n******************************************************************************/\n\n// colors\n$icon-colors: (\n  'warn': $icon-warn,\n  'success': $icon-success,\n  'info': $icon-info,\n  'primary': $icon-primary,\n  'secondary': $icon-secondary\n);\n\n// sizes\n$icon-size-default: $icon-size-d; // default icon size\n$icon-sizes: (\n  's': $icon-size-s,\n  'm': $icon-size-m,\n  'l': $icon-size-l\n);\n","/*****************************************************************************\r\n                              Icon - Functions\r\n******************************************************************************/\n","/*****************************************************************************\r\n                              Icon - Classes\r\n******************************************************************************/\n\n/*\n  Adds color to an icon.\n\n  Attributes:\n  - color: 'warn', 'success', 'info', 'primary', 'secondary'\n\n  OPTION '.icon--[color]' for ROOT '.sb-icon'\n*/\n@mixin icon-color-class($icon-color) {\n  &.icon--#{$icon-color} {\n    color: map-get($icon-colors, $icon-color);\n  }\n}\n\n/*\n  Adds different sizes to the icon.\n\n  Attributes:\n  - size: 's', 'm', 'l'[, 'd']\n\n  OPTION '.icon--[size] for ROOT '.sb-icon'\n*/\n@mixin icon-size-class($icon-size) {\n  &.icon--#{$icon-size} {\n    font-size: map-get($icon-sizes, $icon-size);\n  }\n}\n\n\n/*\n  Defines the root icon class with all its sizes.\n\n  ROOT: .sb-icon\n*/\n@debug \"Create icon-classes\";\n.sb-icon {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: $icon-size-default;  /* Preferred icon size */\n  display: inline-block;\n  line-height: 1;\n  text-transform: none;\n  letter-spacing: normal;\n  word-wrap: normal;\n  white-space: nowrap;\n  direction: ltr;\n  color: white;\n\n  /* Support for all WebKit browsers. */\n  -webkit-font-smoothing: antialiased;\n  /* Support for Safari and Chrome. */\n  text-rendering: optimizeLegibility;\n\n  /* Support for Firefox. */\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Support for IE. */\n  font-feature-settings: 'liga';\n\n  @each $icon-size in map-keys($icon-sizes) {\n    @include icon-size-class($icon-size);\n  }\n\n  @each $icon-color in map-keys($icon-colors) {\n    @include icon-color-class($icon-color);\n  }\n}\n","body, html {\n  @include font-weight('regular');\n  @include fontface('default');\n  @include font-size('d');\n}\n"]}