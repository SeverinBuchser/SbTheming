/*****************************************************************************
                            Button - Classes
******************************************************************************/

/*
  Adds color and hover to a button. Also creates the inverse of the colors.

  Attributes:
  - color: 'warn', 'success', 'info', 'primary', 'secondary'

  OPTION '.btn--[color]' for ROOT '.sb-btn'
*/
@mixin button-color-class($button-color) {
  &.btn--#{$button-color} {
    background: getButtonBackgroundColor($button-color);
    color: getButtonTextColor($button-color);
    @include ease(300ms);
    &:hover {
      background: getButtonHoverBackgroundColor($button-color);
      color: getButtonHoverTextColor($button-color);
    }
    @include button-empty-color-class($button-color);
  }
}

/*
  Adds inverse colors as in the normal class.

  Attributes:
  - NONE

  OPTION '.is-plain' for OPTION '.btn--[color]'
*/
@mixin button-empty-color-class($button-color) {
  &.is-plain {
    background: getButtonHoverBackgroundColor($button-color);
    color: getButtonHoverTextColor($button-color);
    &:hover {
      background: getButtonBackgroundColor($button-color);
      color: getButtonTextColor($button-color);
    }
  }
}

/*
  Adds different sizes to the button.

  Attributes:
  - size: 's', 'm', 'l'[, 'd']

  OPTION '.btn--[size] for ROOT '.sb-btn'
*/
@mixin button-size-class($button-size) {
  &.btn--#{$button-size} {
    font-size: map-get($button-sizes, $button-size)/1.7;
    line-height: map-get($button-sizes, $button-size)/1.7;
    height: map-get($button-sizes, $button-size);
    @include paddingX(map-get($button-sizes, $button-size)/2.5);
  }
}

/*
  Defines the root button class with all its sizes and colors.

  ROOT: .sb-btn
*/
@debug "Create button-classes";
.sb-btn {
  border: 0;
  outline: 0;
  cursor: pointer;

  font-size: $button-default-size/2;
  font-size: $button-default-size/2;
  line-height: $button-default-size/2;
  height: $button-default-size;
  border-radius: $button-border-radius;
  @include paddingX($button-default-size/2);

  font-weight: getFontWeight('regular');
  font-family: getFontface('default');

  @each $button-size in map-keys($button-sizes) {
    @include button-size-class($button-size);
  }

  @each $button-color in map-keys($button-colors) {
    @include button-color-class($button-color);
  }
}
