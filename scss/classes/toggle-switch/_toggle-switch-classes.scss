/*****************************************************************************
                              Toggle-Switch - Classes
******************************************************************************/

/*
  Adds different colors to a toggle switch. The color changes if the state of
  the toggle switch is changing. The state is determined by the OPTION '.is-on'
  or '.is-off'. The states have to be set dynamically.

  Attributes:
  - theme: 'light', 'night'
  - color: 'warn', 'success', 'info', 'primary', 'secondary'

  OPTION '.toggle-switch--[theme]-[color]' for ROOT '.sb-toggle-switch'
*/
@mixin toggle-switch-color-class($toggle-switch-theme, $toggle-switch-color) {
  &.toggle-switch--#{$toggle-switch-theme}-#{$toggle-switch-color} {
    &.is-off {
      background: getBackgroundColorInverse($toggle-switch-theme, $toggle-switch-color);
      .sb-toggle-switch__toggle {
        background: getTextColorInverse($toggle-switch-theme, $toggle-switch-color);
      }
    }

    &.is-on {
      background: getBackgroundColor($toggle-switch-theme, $toggle-switch-color);
      .sb-toggle-switch__toggle {
        background: getTextColor($toggle-switch-theme, $toggle-switch-color);
      }
    }
  }
}

/*
  Adds different sizes to a toggle switch. Movement of the toggle does also get
  defined. The movement is based on the toggle switch OPTION '.is-on' or '.is-off'.
  The options have to be set dynamically.

  Attributes:
  - size: 's', 'd', 'm', 'l'

  OPTION '.toggle-switch--[size]' for ROOT '.sb-toggle-switch'
*/
@mixin toggle-switch-size-class($toggle-switch-size) {

  $toggle-switch-size-unit: map-get($toggle-switch-sizes, $toggle-switch-size);
  $toggle-switch-width: $toggle-switch-size-unit * 4;
  $toggle-switch-height: $toggle-switch-size-unit * 2;
  $toggle-diameter: $toggle-switch-size-unit * 1.3;
  $padding: ($toggle-switch-height - $toggle-diameter) / 2;
  $toggle-switch-innerwidth: $toggle-switch-width - 2 * $padding;

  &.toggle-switch--#{$toggle-switch-size} {
    width: $toggle-switch-width;
    height: $toggle-switch-height;
    border-radius: $toggle-switch-height / 2;

    .sb-toggle-switch__toggle {
      top: $padding;
      left: $padding;
      width: $toggle-diameter;
      height: $toggle-diameter;
      border-radius: $toggle-diameter / 2;
    }

    &.is-off {
      .sb-toggle-switch__toggle {
        transform: translateX(0);
      }
    }
    &.is-on {
      .sb-toggle-switch__toggle {
        transform: translateX($toggle-switch-innerwidth - $toggle-diameter);
      }
    }
  }
}

/*
  Creates class for a toggle switch. The class defines colors and sizes for The
  toggle. The movement of the toggle is also defined in the size mixin.

  Attributes:
  - NONE

  ROOT .sb-toggle-switch
*/
.sb-toggle-switch {
  position: relative;
  cursor: pointer;
  @include ease(300ms);
  .sb-toggle-switch__toggle {
    position: absolute;
    @include ease(300ms);
  }

  &.disabled {
    cursor: not-allowed;
  }

  @each $toggle-switch-color in map-keys($background-text-colors) {
    @each $toggle-switch-theme in map-keys(map-get($background-text-colors, $toggle-switch-color)) {
      @include toggle-switch-color-class($toggle-switch-theme, $toggle-switch-color);
    }
  }

  @each $toggle-switch-size in map-keys($toggle-switch-sizes) {
    @include toggle-switch-size-class($toggle-switch-size);
  }
}
