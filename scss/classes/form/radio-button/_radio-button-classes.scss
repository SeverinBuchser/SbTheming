/*****************************************************************************
                              Radio-Button - Classes
******************************************************************************/

/*
  Adds different colors to a radio button. The coloring is based on the two states
  of the checkbos: 'checked' and 'unchecked'. The two states have to be set
  dynamically.

  Attributes:
  - theme: 'light', 'night'
  - color: 'warn', 'success', 'info', 'primary', 'secondary'

  OPTION '.radio-button--[theme]-[color]' for ROOT '.sb-radio-button'
*/
@mixin radio-button-color-class($color) {
  &.radio-button--#{$color} {
    border-color: getBackgroundColor($color);

    &.is-checked {
      background: getBackgroundColor($color);
    }
  }
}

/*
  Adds different sizes to a radio button. The sizes concern widht, height and
  border-radius (circle).

  Attributes:
  - size: 's', 'd', 'm', 'l'

  OPTION '.radio-button--[size]' for ROOT '.sb-radio-button'
*/
@mixin radio-button-size-class($form-height) {
  $height: map-get($form-heights, $form-height);

  &.radio-button--#{$form-height} {
    height: $height;
    width: $height;
  }
}

/*
  Creates class for a radio button. The class defines colors and sizes for The
  radio button and the mark.

  Attributes:
  - NONE

  ROOT .sb-radio-button
*/
.sb-radio-button {
  box-sizing: border-box;
  border: 2px solid;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  @include ease(300ms);

  &.disabled {
    cursor: not-allowed;
  }


  @each $color in $color-names {
    @include radio-button-color-class($color);
  }

  @each $form-height in map-keys($form-heights) {
    @include radio-button-size-class($form-height);
  }
}
